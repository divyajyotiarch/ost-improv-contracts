{
  "contractName": "TestSafeMath",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "result",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "multiply",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "subtract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"multiply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"subtract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"add(uint256,uint256)\":{\"details\":\"Public wrapper for SafeMath function add.\",\"params\":{\"a\":\"Unsigned integer augend.\",\"b\":\"Unsigned integer addend.\"},\"return\":\"uint256 Sum.\"},\"multiply(uint256,uint256)\":{\"details\":\"Public wrapper for SafeMath function mul.\",\"params\":{\"a\":\"Unsigned integer multiplicand.\",\"b\":\"Unsigned integer multiplier.\"},\"return\":\"uint256 Product.\"},\"subtract(uint256,uint256)\":{\"details\":\"Public wrapper for SafeMath function sub.\",\"params\":{\"a\":\"Unsigned integer minuend.\",\"b\":\"Unsigned integer subtrahend.\"},\"return\":\"uint256 Difference.\"}},\"title\":\"TestSafeMath library.\"},\"userdoc\":{\"methods\":{\"add(uint256,uint256)\":{\"notice\":\"Public function add.\"},\"multiply(uint256,uint256)\":{\"notice\":\"Public function multiply.\"},\"subtract(uint256,uint256)\":{\"notice\":\"Public function subtract.\"}},\"notice\":\"Based on the SafeMath library by the OpenZeppelin team.         Mock used for testing.\"}},\"settings\":{\"compilationTarget\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/test/lib/TestSafeMath.sol\":\"TestSafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0xdcb2fb78c68c543132332a59f5566199caf552c469e19dee8bfc3c5c8b768738\",\"urls\":[\"bzz-raw://e5fd45f5543f681754e619bffdccc59f10a4fea8c4e5355fc6d513dbba0fd0e4\",\"dweb:/ipfs/QmcuTyH5RQFwqKqdAYpuNovwDuYxUKJDX3R5dur3mGM9mc\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/test/lib/TestSafeMath.sol\":{\"keccak256\":\"0x91423b6c9a6b1f407974164ef13184325bef9ee67d571f46033b4e927c70af92\",\"urls\":[\"bzz-raw://891cae7d09846353ebfe903003180f083eb693deab7704481381b3800c71b1ea\",\"dweb:/ipfs/QmemBBuTgxgCPwBC3zUmj352ks7x7YWX2hDgAvP5My6SmX\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061025d806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063165c4a16146100515780633ef5e445146100765780636537214714610099578063771602f7146100b3575b600080fd5b6100746004803603604081101561006757600080fd5b50803590602001356100d6565b005b6100746004803603604081101561008c57600080fd5b50803590602001356100e7565b6100a16100f1565b60408051918252519081900360200190f35b610074600480360360408110156100c957600080fd5b50803590602001356100f7565b6100e08282610101565b6000555050565b6100e08282610179565b60005481565b6100e082826101d6565b60008261011057506000610173565b8282028284828161011d57fe5b0414610170576040805162461bcd60e51b815260206004820152601a60248201527f4f766572666c6f77207768656e206d756c7469706c79696e672e000000000000604482015290519081900360640190fd5b90505b92915050565b6000828211156101d0576040805162461bcd60e51b815260206004820152601b60248201527f556e646572666c6f77207768656e207375627472616374696e672e0000000000604482015290519081900360640190fd5b50900390565b600082820183811015610170576040805162461bcd60e51b815260206004820152601560248201527427bb32b9333637bb903bb432b71030b23234b7339760591b604482015290519081900360640190fdfea265627a7a72315820aae5fc98d91e2a3a8bcc85ac1bc3f43f168d105e638caee9bf5f6526b6fcd43164736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063165c4a16146100515780633ef5e445146100765780636537214714610099578063771602f7146100b3575b600080fd5b6100746004803603604081101561006757600080fd5b50803590602001356100d6565b005b6100746004803603604081101561008c57600080fd5b50803590602001356100e7565b6100a16100f1565b60408051918252519081900360200190f35b610074600480360360408110156100c957600080fd5b50803590602001356100f7565b6100e08282610101565b6000555050565b6100e08282610179565b60005481565b6100e082826101d6565b60008261011057506000610173565b8282028284828161011d57fe5b0414610170576040805162461bcd60e51b815260206004820152601a60248201527f4f766572666c6f77207768656e206d756c7469706c79696e672e000000000000604482015290519081900360640190fd5b90505b92915050565b6000828211156101d0576040805162461bcd60e51b815260206004820152601b60248201527f556e646572666c6f77207768656e207375627472616374696e672e0000000000604482015290519081900360640190fd5b50900390565b600082820183811015610170576040805162461bcd60e51b815260206004820152601560248201527427bb32b9333637bb903bb432b71030b23234b7339760591b604482015290519081900360640190fdfea265627a7a72315820aae5fc98d91e2a3a8bcc85ac1bc3f43f168d105e638caee9bf5f6526b6fcd43164736f6c63430005100032",
  "sourceMap": "1223:1128:43:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1223:1128:43;;;;;;;",
  "deployedSourceMap": "1223:1128:43:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1223:1128:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1582:91;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1582:91:43;;;;;;;:::i;:::-;;1933;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1933:91:43;;;;;;;:::i;1272:21::-;;;:::i;:::-;;;;;;;;;;;;;;;;2263:86;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2263:86:43;;;;;;;:::i;1582:91::-;1648:18;1661:1;1664;1648:12;:18::i;:::-;1639:6;:27;-1:-1:-1;;1582:91:43:o;1933:::-;1999:18;2012:1;2015;1999:12;:18::i;1272:21::-;;;;:::o;2263:86::-;2324:18;2337:1;2340;2324:12;:18::i;1442:508:42:-;1500:7;1763:6;1759:45;;-1:-1:-1;1792:1:42;1785:8;;1759:45;1826:5;;;1830:1;1826;:5;:1;1862:5;;;;;:10;1841:83;;;;;-1:-1:-1;;;1841:83:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;1942:1;-1:-1:-1;1442:508:42;;;;;:::o;2911:210::-;2969:7;3014:1;3009;:6;;2988:80;;;;;-1:-1:-1;;;2988:80:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3090:5:42;;;2911:210::o;3321:204::-;3379:7;3410:5;;;3446:6;;;;3425:74;;;;;-1:-1:-1;;;3425:74:42;;;;;;;;;;;;-1:-1:-1;;;3425:74:42;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\n// Copyright 2019 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// \n// ----------------------------------------------------------------------------\n// Common: SafeMath Library Implementation\n//\n// http://www.simpletoken.org/\n//\n// Based on the SafeMath library by the OpenZeppelin team.\n// Copyright (c) 2016 Smart Contract Solutions, Inc.\n// https://github.com/OpenZeppelin/zeppelin-solidity\n// The MIT License.\n// ----------------------------------------------------------------------------\n\nimport \"../../lib/SafeMath.sol\";\n\n/**\n *  @title TestSafeMath library.\n *\n *  @notice Based on the SafeMath library by the OpenZeppelin team.\n *          Mock used for testing.\n */\ncontract TestSafeMath {\n\n    /** Storage */\n\n    uint256 public result;\n\n    /* Public functions */\n\n    /**\n    *  @notice Public function multiply.\n    *\n    *  @dev Public wrapper for SafeMath function mul.\n    *\n    *  @param a Unsigned integer multiplicand.\n    *  @param b Unsigned integer multiplier.\n    *\n    *  @return uint256 Product.\n    */  \n    function multiply(uint256 a, uint256 b) public {\n        result = SafeMath.mul(a, b);\n    }\n\n    /**\n    *  @notice Public function subtract.\n    *\n    *  @dev Public wrapper for SafeMath function sub.\n    *\n    *  @param a Unsigned integer minuend.\n    *  @param b Unsigned integer subtrahend.\n    *\n    *  @return uint256 Difference.\n    */    \n    function subtract(uint256 a, uint256 b) public {\n        result = SafeMath.sub(a, b);\n    }\n\n    /**\n    *  @notice Public function add.\n    *\n    *  @dev Public wrapper for SafeMath function add.\n    *\n    *  @param a Unsigned integer augend.\n    *  @param b Unsigned integer addend.\n    *\n    *  @return uint256 Sum.\n    */\n    function add(uint256 a, uint256 b) public {\n        result = SafeMath.add(a, b);\n    }\n}\n",
  "sourcePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/test/lib/TestSafeMath.sol",
  "ast": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/test/lib/TestSafeMath.sol",
    "exportedSymbols": {
      "TestSafeMath": [
        5386
      ]
    },
    "id": 5387,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5334,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/lib/SafeMath.sol",
        "file": "../../lib/SafeMath.sol",
        "id": 5335,
        "nodeType": "ImportDirective",
        "scope": 5387,
        "sourceUnit": 5333,
        "src": "1042:32:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": " @title TestSafeMath library.\n *  @notice Based on the SafeMath library by the OpenZeppelin team.\n         Mock used for testing.",
        "fullyImplemented": true,
        "id": 5386,
        "linearizedBaseContracts": [
          5386
        ],
        "name": "TestSafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5337,
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 5386,
            "src": "1272:21:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5336,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1272:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5352,
              "nodeType": "Block",
              "src": "1629:44:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5344,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5337,
                      "src": "1639:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5347,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5339,
                          "src": "1661:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5348,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5341,
                          "src": "1664:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5345,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5332,
                          "src": "1648:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$5332_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 5346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5235,
                        "src": "1648:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1648:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1639:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5351,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:27:43"
                }
              ]
            },
            "documentation": " @notice Public function multiply.\n    *  @dev Public wrapper for SafeMath function mul.\n    *  @param a Unsigned integer multiplicand.\n @param b Unsigned integer multiplier.\n    *  @return uint256 Product.",
            "id": 5353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "multiply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5339,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 5353,
                  "src": "1600:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5341,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 5353,
                  "src": "1611:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1599:22:43"
            },
            "returnParameters": {
              "id": 5343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1629:0:43"
            },
            "scope": 5386,
            "src": "1582:91:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5368,
              "nodeType": "Block",
              "src": "1980:44:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5360,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5337,
                      "src": "1990:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5363,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5355,
                          "src": "2012:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5364,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5357,
                          "src": "2015:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5361,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5332,
                          "src": "1999:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$5332_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 5362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5285,
                        "src": "1999:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1999:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1990:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5367,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:27:43"
                }
              ]
            },
            "documentation": " @notice Public function subtract.\n    *  @dev Public wrapper for SafeMath function sub.\n    *  @param a Unsigned integer minuend.\n @param b Unsigned integer subtrahend.\n    *  @return uint256 Difference.",
            "id": 5369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subtract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5355,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 5369,
                  "src": "1951:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5357,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 5369,
                  "src": "1962:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1950:22:43"
            },
            "returnParameters": {
              "id": 5359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1980:0:43"
            },
            "scope": 5386,
            "src": "1933:91:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5384,
              "nodeType": "Block",
              "src": "2305:44:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5376,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5337,
                      "src": "2315:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5379,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5371,
                          "src": "2337:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5380,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5373,
                          "src": "2340:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5377,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5332,
                          "src": "2324:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$5332_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 5378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5310,
                        "src": "2324:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2324:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2315:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5383,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:27:43"
                }
              ]
            },
            "documentation": " @notice Public function add.\n    *  @dev Public wrapper for SafeMath function add.\n    *  @param a Unsigned integer augend.\n @param b Unsigned integer addend.\n    *  @return uint256 Sum.",
            "id": 5385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5371,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 5385,
                  "src": "2276:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5373,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 5385,
                  "src": "2287:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2287:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2275:22:43"
            },
            "returnParameters": {
              "id": 5375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2305:0:43"
            },
            "scope": 5386,
            "src": "2263:86:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5387,
        "src": "1223:1128:43"
      }
    ],
    "src": "0:2352:43"
  },
  "legacyAST": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/test/lib/TestSafeMath.sol",
    "exportedSymbols": {
      "TestSafeMath": [
        5386
      ]
    },
    "id": 5387,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5334,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/lib/SafeMath.sol",
        "file": "../../lib/SafeMath.sol",
        "id": 5335,
        "nodeType": "ImportDirective",
        "scope": 5387,
        "sourceUnit": 5333,
        "src": "1042:32:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": " @title TestSafeMath library.\n *  @notice Based on the SafeMath library by the OpenZeppelin team.\n         Mock used for testing.",
        "fullyImplemented": true,
        "id": 5386,
        "linearizedBaseContracts": [
          5386
        ],
        "name": "TestSafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5337,
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 5386,
            "src": "1272:21:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5336,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1272:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5352,
              "nodeType": "Block",
              "src": "1629:44:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5344,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5337,
                      "src": "1639:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5347,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5339,
                          "src": "1661:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5348,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5341,
                          "src": "1664:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5345,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5332,
                          "src": "1648:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$5332_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 5346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5235,
                        "src": "1648:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1648:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1639:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5351,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:27:43"
                }
              ]
            },
            "documentation": " @notice Public function multiply.\n    *  @dev Public wrapper for SafeMath function mul.\n    *  @param a Unsigned integer multiplicand.\n @param b Unsigned integer multiplier.\n    *  @return uint256 Product.",
            "id": 5353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "multiply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5339,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 5353,
                  "src": "1600:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5341,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 5353,
                  "src": "1611:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1599:22:43"
            },
            "returnParameters": {
              "id": 5343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1629:0:43"
            },
            "scope": 5386,
            "src": "1582:91:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5368,
              "nodeType": "Block",
              "src": "1980:44:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5360,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5337,
                      "src": "1990:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5363,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5355,
                          "src": "2012:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5364,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5357,
                          "src": "2015:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5361,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5332,
                          "src": "1999:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$5332_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 5362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5285,
                        "src": "1999:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1999:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1990:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5367,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:27:43"
                }
              ]
            },
            "documentation": " @notice Public function subtract.\n    *  @dev Public wrapper for SafeMath function sub.\n    *  @param a Unsigned integer minuend.\n @param b Unsigned integer subtrahend.\n    *  @return uint256 Difference.",
            "id": 5369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subtract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5355,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 5369,
                  "src": "1951:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5357,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 5369,
                  "src": "1962:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1950:22:43"
            },
            "returnParameters": {
              "id": 5359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1980:0:43"
            },
            "scope": 5386,
            "src": "1933:91:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5384,
              "nodeType": "Block",
              "src": "2305:44:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5376,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5337,
                      "src": "2315:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5379,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5371,
                          "src": "2337:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5380,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5373,
                          "src": "2340:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5377,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5332,
                          "src": "2324:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$5332_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 5378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5310,
                        "src": "2324:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2324:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2315:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5383,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:27:43"
                }
              ]
            },
            "documentation": " @notice Public function add.\n    *  @dev Public wrapper for SafeMath function add.\n    *  @param a Unsigned integer augend.\n @param b Unsigned integer addend.\n    *  @return uint256 Sum.",
            "id": 5385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5371,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 5385,
                  "src": "2276:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5373,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 5385,
                  "src": "2287:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2287:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2275:22:43"
            },
            "returnParameters": {
              "id": 5375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2305:0:43"
            },
            "scope": 5386,
            "src": "2263:86:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5387,
        "src": "1223:1128:43"
      }
    ],
    "src": "0:2352:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.21",
  "updatedAt": "2020-01-21T06:50:59.713Z",
  "devdoc": {
    "methods": {
      "add(uint256,uint256)": {
        "details": "Public wrapper for SafeMath function add.",
        "params": {
          "a": "Unsigned integer augend.",
          "b": "Unsigned integer addend."
        },
        "return": "uint256 Sum."
      },
      "multiply(uint256,uint256)": {
        "details": "Public wrapper for SafeMath function mul.",
        "params": {
          "a": "Unsigned integer multiplicand.",
          "b": "Unsigned integer multiplier."
        },
        "return": "uint256 Product."
      },
      "subtract(uint256,uint256)": {
        "details": "Public wrapper for SafeMath function sub.",
        "params": {
          "a": "Unsigned integer minuend.",
          "b": "Unsigned integer subtrahend."
        },
        "return": "uint256 Difference."
      }
    },
    "title": "TestSafeMath library."
  },
  "userdoc": {
    "methods": {
      "add(uint256,uint256)": {
        "notice": "Public function add."
      },
      "multiply(uint256,uint256)": {
        "notice": "Public function multiply."
      },
      "subtract(uint256,uint256)": {
        "notice": "Public function subtract."
      }
    },
    "notice": "Based on the SafeMath library by the OpenZeppelin team.         Mock used for testing."
  }
}