{
  "contractName": "BaseSafe",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "AddedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "ChangedThreshold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Module",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "DisabledModule",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Module",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "EnabledModule",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RemovedOwner",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SENTINEL_MODULES",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SENTINEL_OWNERS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "addOwnerWithThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "changeThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract Module",
          "name": "prevModule",
          "type": "address"
        },
        {
          "internalType": "contract Module",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "disableModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract Module",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "enableModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "execTransactionFromModule",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getModules",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "swapOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"ChangedThreshold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract Module\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"DisabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract Module\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"EnabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RemovedOwner\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENTINEL_MODULES\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENTINEL_OWNERS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"addOwnerWithThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"changeThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract Module\",\"name\":\"prevModule\",\"type\":\"address\"},{\"internalType\":\"contract Module\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"disableModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract Module\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"enableModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"swapOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.pm>Richard Meissner - <richard@gnosis.pm>\",\"methods\":{\"addOwnerWithThreshold(address,uint256)\":{\"details\":\"Allows to add a new owner to the Safe and update the threshold at the same time.      This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\",\"owner\":\"New owner address.\"}},\"changeThreshold(uint256)\":{\"details\":\"Allows to update the number of required confirmations by Safe owners.      This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\"}},\"disableModule(address,address)\":{\"details\":\"Allows to remove a module from the whitelist.      This can only be done via a Safe transaction.\",\"params\":{\"module\":\"Module to be removed.\",\"prevModule\":\"Module that pointed to the module to be removed in the linked list\"}},\"enableModule(address)\":{\"details\":\"Allows to add a module to the whitelist.      This can only be done via a Safe transaction.\",\"params\":{\"module\":\"Module to be whitelisted.\"}},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Allows a Module to execute a Safe transaction without any further confirmations.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"}},\"getModules()\":{\"details\":\"Returns array of modules.\",\"return\":\"Array of modules.\"},\"getOwners()\":{\"details\":\"Returns array of owners.\",\"return\":\"Array of Safe owners.\"},\"removeOwner(address,address,uint256)\":{\"details\":\"Allows to remove an owner from the Safe and update the threshold at the same time.      This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\",\"owner\":\"Owner address to be removed.\",\"prevOwner\":\"Owner that pointed to the owner to be removed in the linked list\"}},\"swapOwner(address,address,address)\":{\"details\":\"Allows to swap/replace an owner from the Safe with another address.      This can only be done via a Safe transaction.\",\"params\":{\"newOwner\":\"New owner address.\",\"oldOwner\":\"Owner address to be replaced.\",\"prevOwner\":\"Owner that pointed to the owner to be replaced in the linked list\"}}},\"title\":\"Base Safe - A multisignature wallet with support for modules and owners. This contract needs to be extented to add functionality to execute transactions.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/BaseSafe.sol\":\"BaseSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/BaseSafe.sol\":{\"keccak256\":\"0xec33c9d3f1c1ec51f0e5f999883d2a540a8124da11612e83e9079cd5bb69324c\",\"urls\":[\"bzz-raw://78255d4bacaa908ef477d3473a5fc71f01c50bdf5184c620521271eb1cd1bd51\",\"dweb:/ipfs/QmePbURnbZuim6Ds2H7jjmycdERTdNg68ZM3dLotRsLnrj\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0x17340f8c5c3f4fb0ef0818ee6e7e0b9c0594500597ef50f8dcf04f14865ac2bb\",\"urls\":[\"bzz-raw://a1eeeefbde00d8ebf5db97672cfa64281fc5b0567f67c5b4e1e1e6e7c516706a\",\"dweb:/ipfs/QmcMxvnVisrsHaqLp7ZShbvhDJ24eFbbXwe2RiccxKoUhz\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/Module.sol\":{\"keccak256\":\"0xcef03afe4f821d9dcf531bde3d055717d90f91820a6c26703cd33ee810dcb9db\",\"urls\":[\"bzz-raw://b814e6802ac4aca0444b250d2db2e3a89aee5df9df3ea37904ca59099c55df16\",\"dweb:/ipfs/QmRZ4Dxi491o1gqhNcC6RNNN4Ku8LKBbFadhLvQfNpTWZ2\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xafe067f0fe5d53ecc9ea6b209cb480af5946e40fb009e9bb6c66115c1ab2e114\",\"urls\":[\"bzz-raw://be1ebda5934eacd29cd5355fd86c2e588f1136f108e50837ad02a5884c1052d5\",\"dweb:/ipfs/QmZdaKEJqdm3eXUohTiBTbMXHMrBNL5d6e5iVaLNrCwkiv\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xf8c6a9b5bae4a3b410e088db630fb459aef70afef9409887681d601fa15fef49\",\"urls\":[\"bzz-raw://064eab325091a5137a12283e0f5ba84f93418483a2aef43143f5b6c7f1b58865\",\"dweb:/ipfs/QmZNK7rjHkmbxKfbJb1i1ya25MAMp3Pjg15YZuYJ7YNoht\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0xa7a7883be39218c7402cbe698716d2eda015e93b417f771231941decfc4737ae\",\"urls\":[\"bzz-raw://fb4db3af8fc70726eb75e1766d84a0d6356501e3bb66b9d7ab66c93a93138128\",\"dweb:/ipfs/QmQxmZMaa1BgHRZ72C6vePCim9oXYVR2CV4hZv6y9fkUpV\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0xcc87aae587261e68a6348060cf84d0211b98cebd2450b460609711f2d372adfd\",\"urls\":[\"bzz-raw://caa44c6f6384cd8646c13046f89cd8a92037106ca780a718784e746c652f8e2c\",\"dweb:/ipfs/QmYkNjEkpa3z5wx3hQyb6VVDU7qB7tVfBUUkJRqV5NAErw\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/common/MasterCopy.sol\":{\"keccak256\":\"0x10e1ee1567d98f03da94d8bd0a67ee01dd55f1be6acd63c97d6349de8283d83a\",\"urls\":[\"bzz-raw://f62fce6169e7a1504dd9b2d9de17bcc152be523379da726213ef24817f86582f\",\"dweb:/ipfs/QmeE244TAFcaHkuvo4hXx924UnH7PuHmnq3Mk1SiYC4qpP\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0x7df04754f0a0d11c0f2e26eb1e0d616211a36ba55321cfa70a59506cf93839aa\",\"urls\":[\"bzz-raw://15748aa18d56df88aac888033ce4652a373312dcd0a1e192e31ba5a01fb2fc6a\",\"dweb:/ipfs/QmcYwp1tQFxCbzqeQBcQMH386rbXzvC6TTan3FGHJqJZ5K\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061135e806100206000396000f3fe6080604052600436106100c25760003560e01c80638cff63551161007f578063e009cfde11610059578063e009cfde14610319578063e318b52b14610354578063e75235b814610399578063f8dc5dd9146103c0576100c2565b80638cff63551461026e578063a0e67e2b1461029f578063b2494df314610304576100c2565b80630d582f13146100c45780632f54bf6e146100fd578063468721a714610144578063610b592514610211578063694e80c31461024457806385e332cd1461026e575b005b3480156100d057600080fd5b506100c2600480360360408110156100e757600080fd5b506001600160a01b038135169060200135610403565b34801561010957600080fd5b506101306004803603602081101561012057600080fd5b50356001600160a01b03166105c2565b604080519115158252519081900360200190f35b34801561015057600080fd5b506101306004803603608081101561016757600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561019757600080fd5b8201836020820111156101a957600080fd5b803590602001918460018302840111640100000000831117156101cb57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506105e29050565b34801561021d57600080fd5b506100c26004803603602081101561023457600080fd5b50356001600160a01b031661064c565b34801561025057600080fd5b506100c26004803603602081101561026757600080fd5b50356107fd565b34801561027a57600080fd5b506102836108f7565b604080516001600160a01b039092168252519081900360200190f35b3480156102ab57600080fd5b506102b46108fc565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102f05781810151838201526020016102d8565b505050509050019250505060405180910390f35b34801561031057600080fd5b506102b46109c7565b34801561032557600080fd5b506100c26004803603604081101561033c57600080fd5b506001600160a01b0381358116916020013516610b08565b34801561036057600080fd5b506100c26004803603606081101561037757600080fd5b506001600160a01b038135811691602081013582169160409091013516610c90565b3480156103a557600080fd5b506103ae610f24565b60408051918252519081900360200190f35b3480156103cc57600080fd5b506100c2600480360360608110156103e357600080fd5b506001600160a01b03813581169160208101359091169060400135610f2a565b3330146104415760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b6001600160a01b0382161580159061046357506001600160a01b038216600114155b6104a2576040805162461bcd60e51b815260206004820152601e60248201526000805160206111e4833981519152604482015290519081900360640190fd5b6001600160a01b03828116600090815260016020526040902054161561050f576040805162461bcd60e51b815260206004820152601b60248201527f4164647265737320697320616c726561647920616e206f776e65720000000000604482015290519081900360640190fd5b600160208181527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03868116600081815260408082208054949095166001600160a01b0319948516179094558690528354909116811790925560028054909401909355825190815291517f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269281900390910190a180600354146105be576105be816107fd565b5050565b6001600160a01b0390811660009081526001602052604090205416151590565b336000908152602081905260408120546001600160a01b03166106365760405162461bcd60e51b81526004018080602001828103825260308152602001806112fa6030913960400191505060405180910390fd5b610643858585855a611103565b95945050505050565b33301461068a5760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b6001600160a01b038116158015906106ac57506001600160a01b038116600114155b6106fd576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c6964206d6f64756c6520616464726573732070726f766964656400604482015290519081900360640190fd5b6001600160a01b03818116600090815260208190526040902054161561076a576040805162461bcd60e51b815260206004820152601d60248201527f4d6f64756c652068617320616c7265616479206265656e206164646564000000604482015290519081900360640190fd5b600060208181527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b0385811680865260408087208054939094166001600160a01b031993841617909355600190955282541684179091558051928352517fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f84409281900390910190a150565b33301461083b5760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b60025481111561087c5760405162461bcd60e51b815260040180806020018281038252602381526020018061122c6023913960400191505060405180910390fd5b60018110156108bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806112aa6024913960400191505060405180910390fd5b60038190556040805182815290517f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939181900360200190a150565b600181565b60608060025460405190808252806020026020018201604052801561092b578160200160208202803883390190505b50600160008181526020919091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54919250906001600160a01b03165b6001600160a01b0381166001146109bf578083838151811061098757fe5b6001600160a01b0392831660209182029290920181019190915291811660009081526001928390526040902054929091019116610969565b509091505090565b6001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54606091906001600160a01b03165b6001600160a01b038116600114610a3b576001600160a01b039081166000908152602081905260409020546001929092019116610a03565b606082604051908082528060200260200182016040528015610a67578160200160208202803883390190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d549094506001600160a01b0316925090505b6001600160a01b038216600114610b015781818481518110610ac557fe5b6001600160a01b039283166020918202929092018101919091529281166000908152928390526040909220546001939093019290911690610aa7565b9250505090565b333014610b465760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b6001600160a01b03811615801590610b6857506001600160a01b038116600114155b610bb9576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c6964206d6f64756c6520616464726573732070726f766964656400604482015290519081900360640190fd5b6001600160a01b03828116600090815260208190526040902054811690821614610c145760405162461bcd60e51b81526004018080602001828103825260288152602001806112046028913960400191505060405180910390fd5b6001600160a01b03818116600081815260208181526040808320805488871685528285208054919097166001600160a01b031991821617909655928490528254909416909155825191825291517faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276929181900390910190a15050565b333014610cce5760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b6001600160a01b03811615801590610cf057506001600160a01b038116600114155b610d2f576040805162461bcd60e51b815260206004820152601e60248201526000805160206111e4833981519152604482015290519081900360640190fd5b6001600160a01b038181166000908152600160205260409020541615610d9c576040805162461bcd60e51b815260206004820152601b60248201527f4164647265737320697320616c726561647920616e206f776e65720000000000604482015290519081900360640190fd5b6001600160a01b03821615801590610dbe57506001600160a01b038216600114155b610dfd576040805162461bcd60e51b815260206004820152601e60248201526000805160206111e4833981519152604482015290519081900360640190fd5b6001600160a01b03838116600090815260016020526040902054811690831614610e585760405162461bcd60e51b81526004018080602001828103825260268152602001806112846026913960400191505060405180910390fd5b6001600160a01b038281166000818152600160209081526040808320805487871680865283862080549289166001600160a01b0319938416179055968a16855282852080548216909717909655928490528254909416909155825191825291517ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf929181900390910190a1604080516001600160a01b038316815290517f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269181900360200190a1505050565b60035490565b333014610f685760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b806001600254031015610fac5760405162461bcd60e51b815260040180806020018281038252603581526020018061124f6035913960400191505060405180910390fd5b6001600160a01b03821615801590610fce57506001600160a01b038216600114155b61100d576040805162461bcd60e51b815260206004820152601e60248201526000805160206111e4833981519152604482015290519081900360640190fd5b6001600160a01b038381166000908152600160205260409020548116908316146110685760405162461bcd60e51b81526004018080602001828103825260268152602001806112846026913960400191505060405180910390fd5b6001600160a01b038281166000818152600160209081526040808320805489871685528285208054919097166001600160a01b03199182161790965592849052825490941690915560028054600019019055825191825291517ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf929181900390910190a180600354146110fe576110fe816107fd565b505050565b60008083600281111561111257fe5b141561112b57611124868686856111a4565b9050610643565b600183600281111561113957fe5b141561114a576111248685846111bc565b6000611155856111d2565b604080516001600160a01b038316808252915191151594509192507f4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b5119181900360200190a15095945050505050565b6000806000845160208601878987f195945050505050565b60008060008451602086018786f4949350505050565b60008151602083016000f09291505056fe496e76616c6964206f776e657220616464726573732070726f76696465640000496e76616c696420707265764d6f64756c652c206d6f64756c6520706169722070726f76696465645468726573686f6c642063616e6e6f7420657863656564206f776e657220636f756e744e6577206f776e657220636f756e74206e6565647320746f206265206c6172676572207468616e206e6577207468726573686f6c64496e76616c696420707265764f776e65722c206f776e657220706169722070726f76696465645468726573686f6c64206e6565647320746f2062652067726561746572207468616e20304d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d207468697320636f6e74726163744d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d20616e20656e61626c6564206d6f64756c65a265627a7a72315820afd466b00ccb212b7788e0804f5dc89de7318fa9f269272141a4a6b569d6713364736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80638cff63551161007f578063e009cfde11610059578063e009cfde14610319578063e318b52b14610354578063e75235b814610399578063f8dc5dd9146103c0576100c2565b80638cff63551461026e578063a0e67e2b1461029f578063b2494df314610304576100c2565b80630d582f13146100c45780632f54bf6e146100fd578063468721a714610144578063610b592514610211578063694e80c31461024457806385e332cd1461026e575b005b3480156100d057600080fd5b506100c2600480360360408110156100e757600080fd5b506001600160a01b038135169060200135610403565b34801561010957600080fd5b506101306004803603602081101561012057600080fd5b50356001600160a01b03166105c2565b604080519115158252519081900360200190f35b34801561015057600080fd5b506101306004803603608081101561016757600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561019757600080fd5b8201836020820111156101a957600080fd5b803590602001918460018302840111640100000000831117156101cb57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506105e29050565b34801561021d57600080fd5b506100c26004803603602081101561023457600080fd5b50356001600160a01b031661064c565b34801561025057600080fd5b506100c26004803603602081101561026757600080fd5b50356107fd565b34801561027a57600080fd5b506102836108f7565b604080516001600160a01b039092168252519081900360200190f35b3480156102ab57600080fd5b506102b46108fc565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102f05781810151838201526020016102d8565b505050509050019250505060405180910390f35b34801561031057600080fd5b506102b46109c7565b34801561032557600080fd5b506100c26004803603604081101561033c57600080fd5b506001600160a01b0381358116916020013516610b08565b34801561036057600080fd5b506100c26004803603606081101561037757600080fd5b506001600160a01b038135811691602081013582169160409091013516610c90565b3480156103a557600080fd5b506103ae610f24565b60408051918252519081900360200190f35b3480156103cc57600080fd5b506100c2600480360360608110156103e357600080fd5b506001600160a01b03813581169160208101359091169060400135610f2a565b3330146104415760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b6001600160a01b0382161580159061046357506001600160a01b038216600114155b6104a2576040805162461bcd60e51b815260206004820152601e60248201526000805160206111e4833981519152604482015290519081900360640190fd5b6001600160a01b03828116600090815260016020526040902054161561050f576040805162461bcd60e51b815260206004820152601b60248201527f4164647265737320697320616c726561647920616e206f776e65720000000000604482015290519081900360640190fd5b600160208181527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03868116600081815260408082208054949095166001600160a01b0319948516179094558690528354909116811790925560028054909401909355825190815291517f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269281900390910190a180600354146105be576105be816107fd565b5050565b6001600160a01b0390811660009081526001602052604090205416151590565b336000908152602081905260408120546001600160a01b03166106365760405162461bcd60e51b81526004018080602001828103825260308152602001806112fa6030913960400191505060405180910390fd5b610643858585855a611103565b95945050505050565b33301461068a5760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b6001600160a01b038116158015906106ac57506001600160a01b038116600114155b6106fd576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c6964206d6f64756c6520616464726573732070726f766964656400604482015290519081900360640190fd5b6001600160a01b03818116600090815260208190526040902054161561076a576040805162461bcd60e51b815260206004820152601d60248201527f4d6f64756c652068617320616c7265616479206265656e206164646564000000604482015290519081900360640190fd5b600060208181527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b0385811680865260408087208054939094166001600160a01b031993841617909355600190955282541684179091558051928352517fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f84409281900390910190a150565b33301461083b5760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b60025481111561087c5760405162461bcd60e51b815260040180806020018281038252602381526020018061122c6023913960400191505060405180910390fd5b60018110156108bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806112aa6024913960400191505060405180910390fd5b60038190556040805182815290517f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939181900360200190a150565b600181565b60608060025460405190808252806020026020018201604052801561092b578160200160208202803883390190505b50600160008181526020919091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54919250906001600160a01b03165b6001600160a01b0381166001146109bf578083838151811061098757fe5b6001600160a01b0392831660209182029290920181019190915291811660009081526001928390526040902054929091019116610969565b509091505090565b6001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54606091906001600160a01b03165b6001600160a01b038116600114610a3b576001600160a01b039081166000908152602081905260409020546001929092019116610a03565b606082604051908082528060200260200182016040528015610a67578160200160208202803883390190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d549094506001600160a01b0316925090505b6001600160a01b038216600114610b015781818481518110610ac557fe5b6001600160a01b039283166020918202929092018101919091529281166000908152928390526040909220546001939093019290911690610aa7565b9250505090565b333014610b465760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b6001600160a01b03811615801590610b6857506001600160a01b038116600114155b610bb9576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c6964206d6f64756c6520616464726573732070726f766964656400604482015290519081900360640190fd5b6001600160a01b03828116600090815260208190526040902054811690821614610c145760405162461bcd60e51b81526004018080602001828103825260288152602001806112046028913960400191505060405180910390fd5b6001600160a01b03818116600081815260208181526040808320805488871685528285208054919097166001600160a01b031991821617909655928490528254909416909155825191825291517faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276929181900390910190a15050565b333014610cce5760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b6001600160a01b03811615801590610cf057506001600160a01b038116600114155b610d2f576040805162461bcd60e51b815260206004820152601e60248201526000805160206111e4833981519152604482015290519081900360640190fd5b6001600160a01b038181166000908152600160205260409020541615610d9c576040805162461bcd60e51b815260206004820152601b60248201527f4164647265737320697320616c726561647920616e206f776e65720000000000604482015290519081900360640190fd5b6001600160a01b03821615801590610dbe57506001600160a01b038216600114155b610dfd576040805162461bcd60e51b815260206004820152601e60248201526000805160206111e4833981519152604482015290519081900360640190fd5b6001600160a01b03838116600090815260016020526040902054811690831614610e585760405162461bcd60e51b81526004018080602001828103825260268152602001806112846026913960400191505060405180910390fd5b6001600160a01b038281166000818152600160209081526040808320805487871680865283862080549289166001600160a01b0319938416179055968a16855282852080548216909717909655928490528254909416909155825191825291517ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf929181900390910190a1604080516001600160a01b038316815290517f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269181900360200190a1505050565b60035490565b333014610f685760405162461bcd60e51b815260040180806020018281038252602c8152602001806112ce602c913960400191505060405180910390fd5b806001600254031015610fac5760405162461bcd60e51b815260040180806020018281038252603581526020018061124f6035913960400191505060405180910390fd5b6001600160a01b03821615801590610fce57506001600160a01b038216600114155b61100d576040805162461bcd60e51b815260206004820152601e60248201526000805160206111e4833981519152604482015290519081900360640190fd5b6001600160a01b038381166000908152600160205260409020548116908316146110685760405162461bcd60e51b81526004018080602001828103825260268152602001806112846026913960400191505060405180910390fd5b6001600160a01b038281166000818152600160209081526040808320805489871685528285208054919097166001600160a01b03199182161790965592849052825490941690915560028054600019019055825191825291517ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf929181900390910190a180600354146110fe576110fe816107fd565b505050565b60008083600281111561111257fe5b141561112b57611124868686856111a4565b9050610643565b600183600281111561113957fe5b141561114a576111248685846111bc565b6000611155856111d2565b604080516001600160a01b038316808252915191151594509192507f4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b5119181900360200190a15095945050505050565b6000806000845160208601878987f195945050505050565b60008060008451602086018786f4949350505050565b60008151602083016000f09291505056fe496e76616c6964206f776e657220616464726573732070726f76696465640000496e76616c696420707265764d6f64756c652c206d6f64756c6520706169722070726f76696465645468726573686f6c642063616e6e6f7420657863656564206f776e657220636f756e744e6577206f776e657220636f756e74206e6565647320746f206265206c6172676572207468616e206e6577207468726573686f6c64496e76616c696420707265764f776e65722c206f776e657220706169722070726f76696465645468726573686f6c64206e6565647320746f2062652067726561746572207468616e20304d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d207468697320636f6e74726163744d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d20616e20656e61626c6564206d6f64756c65a265627a7a72315820afd466b00ccb212b7788e0804f5dc89de7318fa9f269272141a4a6b569d6713364736f6c63430005100032",
  "sourceMap": "371:694:70:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:694:70;;;;;;;",
  "deployedSourceMap": "371:694:70:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2250:645:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2250:645:74;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2250:645:74;;;;;;;;:::i;6022:138::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6022:138:74;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6022:138:74;-1:-1:-1;;;;;6022:138:74;;:::i;:::-;;;;;;;;;;;;;;;;;;2909:445:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2909:445:73;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;2909:445:73;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2909:445:73;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2909:445:73;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2909:445:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2909:445:73;;-1:-1:-1;;;2909:445:73;;;;;-1:-1:-1;2909:445:73;;-1:-1:-1;2909:445:73:i;1207:540::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1207:540:73;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1207:540:73;-1:-1:-1;;;;;1207:540:73;;:::i;5454:441:74:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5454:441:74;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5454:441:74;;:::i;488:55:73:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;488:55:73;;;:::i;:::-;;;;-1:-1:-1;;;;;488:55:73;;;;;;;;;;;;;;6242:465:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6242:465:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6242:465:74;;;;;;;;;;;;;;;;;3433:745:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3433:745:73;;;:::i;2008:565::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2008:565:73;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2008:565:73;;;;;;;;;;:::i;4406:859:74:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4406:859:74;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4406:859:74;;;;;;;;;;;;;;;;;;;:::i;5901:115::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5901:115:74;;;:::i;:::-;;;;;;;;;;;;;;;;3237:835;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3237:835:74;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3237:835:74;;;;;;;;;;;;;;;;;:::i;2250:645::-;222:10:79;244:4;222:27;214:84;;;;-1:-1:-1;;;214:84:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2413:19:74;;;;;;:47;;-1:-1:-1;;;;;;2436:24:74;;469:3;2436:24;;2413:47;2405:90;;;;;-1:-1:-1;;;2405:90:74;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2405:90:74;;;;;;;;;;;;;;;-1:-1:-1;;;;;2553:13:74;;;2578:1;2553:13;;;:6;:13;;;;;;;:27;2545:67;;;;;-1:-1:-1;;;2545:67:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;2638:6;:23;;;;;;;-1:-1:-1;;;;;2622:13:74;;;2638:23;2622:13;;;2638:23;2622:13;;;:39;;2638:23;;;;-1:-1:-1;;;;;;2622:39:74;;;;;;;2671:23;;;:31;;;;;;;;;;2712:10;:12;;;;;;;;2739:17;;;;;;;;;;;;;;;;;2837:10;2824:9;;:23;2820:68;;2861:27;2877:10;2861:15;:27::i;:::-;2250:645;;:::o;6022:138::-;-1:-1:-1;;;;;6126:13:74;;;6099:4;6126:13;;;:6;:13;;;;;;;:27;;;6022:138::o;2909:445:73:-;3141:10;3048:12;3133:19;;;;;;;;;;;-1:-1:-1;;;;;3133:19:73;3125:94;;;;-1:-1:-1;;;3125:94:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:46;3309:2;3313:5;3320:4;3326:9;3337;3301:7;:46::i;:::-;3291:56;2909:445;-1:-1:-1;;;;;2909:445:73:o;1207:540::-;222:10:79;244:4;222:27;214:84;;;;-1:-1:-1;;;214:84:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1354:29:73;;;;;;:68;;-1:-1:-1;;;;;;1387:35:73;;539:3;1387:35;;1354:68;1346:112;;;;;-1:-1:-1;;;1346:112:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1517:24:73;;;1553:1;1517:24;;;;;;;;;;;;:38;1509:80;;;;;-1:-1:-1;;;1509:80:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:7;:25;;;;;;;-1:-1:-1;;;;;1599:24:73;;;;;;1626:25;1599:24;;;:52;;1626:25;;;;-1:-1:-1;;;;;;1599:52:73;;;;;;;-1:-1:-1;1661:25:73;;;:43;;;;;;;;1719:21;;;;;;;;;;;;;;;;1207:540;:::o;5454:441:74:-;222:10:79;244:4;222:27;214:84;;;;-1:-1:-1;;;214:84:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5638:10:74;;5624;:24;;5616:72;;;;-1:-1:-1;;;5616:72:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5772:1;5758:10;:15;;5750:64;;;;-1:-1:-1;;;5750:64:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5824:9;:22;;;5861:27;;;;;;;;;;;;;;;;;5454:441;:::o;488:55:73:-;539:3;488:55;:::o;6242:465:74:-;6308:16;6340:22;6379:10;;6365:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6365:25:74;-1:-1:-1;6484:6:74;6434:13;6484:23;;;;;;;;;;6340:50;;-1:-1:-1;6434:13:74;-1:-1:-1;;;;;6484:23:74;6517:162;-1:-1:-1;;;;;6523:31:74;;469:3;6523:31;6517:162;;6585:12;6570:5;6576;6570:12;;;;;;;;-1:-1:-1;;;;;6570:27:74;;;:12;;;;;;;;;;:27;;;;6626:20;;;;;;;:6;:20;;;;;;;;6660:8;;;;;6626:20;6517:162;;;-1:-1:-1;6695:5:74;;-1:-1:-1;;6242:465:74;:::o;3433:745:73:-;539:3;3566:19;3623:25;;;;;;;;;3500:16;;3566:19;-1:-1:-1;;;;;3623:25:73;3658:132;-1:-1:-1;;;;;3664:33:73;;539:3;3664:33;3658:132;;-1:-1:-1;;;;;3729:22:73;;;:7;:22;;;;;;;;;;;;3765:14;;;;;3729:22;3658:132;;;3799:22;3838:11;3824:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3824:26:73;-1:-1:-1;539:3:73;3908:1;3935:25;;;;;;;;;3908:1;;-1:-1:-1;;;;;;3935:25:73;;-1:-1:-1;3799:51:73;-1:-1:-1;3970:180:73;-1:-1:-1;;;;;3976:33:73;;539:3;3976:33;3970:180;;4046:13;4025:5;4031:11;4025:18;;;;;;;;-1:-1:-1;;;;;4025:34:73;;;:18;;;;;;;;;;:34;;;;4089:22;;;:7;:22;;;;;;;;;;;;;4125:14;;;;;4089:22;;;;3970:180;;;4166:5;-1:-1:-1;;;3433:745:73;:::o;2008:565::-;222:10:79;244:4;222:27;214:84;;;;-1:-1:-1;;;214:84:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2203:29:73;;;;;;:68;;-1:-1:-1;;;;;;2236:35:73;;539:3;2236:35;;2203:68;2195:112;;;;;-1:-1:-1;;;2195:112:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2325:28:73;;;:7;:28;;;;;;;;;;;;;:47;;;;2317:100;;;;-1:-1:-1;;;2317:100:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2458:24:73;;;:7;:24;;;;;;;;;;;;;2427:28;;;;;;;;:55;;2458:24;;;;-1:-1:-1;;;;;;2427:55:73;;;;;;;2492:24;;;;:37;;;;;;;;2544:22;;;;;;;;;;;;;;;;;;2008:565;;:::o;4406:859:74:-;222:10:79;244:4;222:27;214:84;;;;-1:-1:-1;;;214:84:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4577:22:74;;;;;;:53;;-1:-1:-1;;;;;;4603:27:74;;469:3;4603:27;;4577:53;4569:96;;;;;-1:-1:-1;;;4569:96:74;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4569:96:74;;;;;;;;;;;;;;;-1:-1:-1;;;;;4723:16:74;;;4751:1;4723:16;;;:6;:16;;;;;;;:30;4715:70;;;;;-1:-1:-1;;;4715:70:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4886:22:74;;;;;;:53;;-1:-1:-1;;;;;;4912:27:74;;469:3;4912:27;;4886:53;4878:96;;;;;-1:-1:-1;;;4878:96:74;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4878:96:74;;;;;;;;;;;;;;;-1:-1:-1;;;;;4992:17:74;;;;;;;:6;:17;;;;;;;;:29;;;;4984:80;;;;-1:-1:-1;;;4984:80:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5093:16:74;;;;;;;:6;:16;;;;;;;;;;5074;;;;;;;;;:35;;5093:16;;;-1:-1:-1;;;;;;5074:35:74;;;;;;5119:17;;;;;;;;:28;;;;;;;;;;5157:16;;;;:29;;;;;;;;5201:22;;;;;;;;;;;;;;;;;;5238:20;;;-1:-1:-1;;;;;5238:20:74;;;;;;;;;;;;;;;4406:859;;;:::o;5901:115::-;6000:9;;5901:115;:::o;3237:835::-;222:10:79;244:4;222:27;214:84;;;;-1:-1:-1;;;214:84:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3463:10:74;3458:1;3445:10;;:14;:28;;3437:94;;;;-1:-1:-1;;;3437:94:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3629:19:74;;;;;;:47;;-1:-1:-1;;;;;;3652:24:74;;469:3;3652:24;;3629:47;3621:90;;;;;-1:-1:-1;;;3621:90:74;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3621:90:74;;;;;;;;;;;;;;;-1:-1:-1;;;;;3729:17:74;;;;;;;:6;:17;;;;;;;;:26;;;;3721:77;;;;-1:-1:-1;;;3721:77:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3828:13:74;;;;;;;:6;:13;;;;;;;;;;3808:17;;;;;;;;:33;;3828:13;;;;-1:-1:-1;;;;;;3808:33:74;;;;;;;3851:13;;;;:26;;;;;;;;3887:10;:12;;-1:-1:-1;;3887:12:74;;;3914:19;;;;;;;;;;;;;;;;;;4014:10;4001:9;;:23;3997:68;;4038:27;4054:10;4038:15;:27::i;:::-;3237:835;;;:::o;313:564:71:-;451:12;;483:9;:32;;;;;;;;;479:392;;;539:35;551:2;555:5;562:4;568:5;539:11;:35::i;:::-;529:45;;479:392;;;606:27;593:9;:40;;;;;;;;;589:282;;;657:36;677:2;681:4;687:5;657:19;:36::i;589:282::-;722:19;744;758:4;744:13;:19::i;:::-;831:29;;;-1:-1:-1;;;;;787:25:71;;831:29;;;;;787:25;;;;-1:-1:-1;722:41:71;;-1:-1:-1;831:29:71;;;;;;;;;589:282;313:564;;;;;;;:::o;883:316::-;999:12;1181:1;1178;1171:4;1165:11;1158:4;1152;1148:15;1141:5;1137:2;1130:5;1125:58;1114:69;1100:93;-1:-1:-1;;;;;1100:93:71:o;1205:310::-;1314:12;1497:1;1494;1487:4;1481:11;1474:4;1468;1464:15;1460:2;1453:5;1440:59;1429:70;1415:94;-1:-1:-1;;;;1415:94:71:o;1521:268::-;1597:19;1767:4;1761:11;1754:4;1748;1744:15;1741:1;1734:39;1719:54;1705:78;-1:-1:-1;;1705:78:71:o",
  "source": "pragma solidity ^0.5.0;\nimport \"./Module.sol\";\nimport \"./ModuleManager.sol\";\nimport \"./OwnerManager.sol\";\n\n\n/// @title Base Safe - A multisignature wallet with support for modules and owners. This contract needs to be extented to add functionality to execute transactions.\n/// @author Stefan George - <stefan@gnosis.pm>\n/// @author Richard Meissner - <richard@gnosis.pm>\ncontract BaseSafe is ModuleManager, OwnerManager {\n\n    /// @dev Setup function sets initial storage of contract.\n    /// @param _owners List of Safe owners.\n    /// @param _threshold Number of required confirmations for a Safe transaction.\n    /// @param to Contract address for optional delegate call.\n    /// @param data Data payload for optional delegate call.\n    function setupSafe(address[] memory _owners, uint256 _threshold, address to, bytes memory data)\n        internal\n    {\n        setupOwners(_owners, _threshold);\n        // As setupOwners can only be called if the contract has not been initialized we don't need a check for setupModules\n        setupModules(to, data);\n    }\n}\n",
  "sourcePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/BaseSafe.sol",
  "ast": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/BaseSafe.sol",
    "exportedSymbols": {
      "BaseSafe": [
        9210
      ]
    },
    "id": 9211,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9179,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:70"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/Module.sol",
        "file": "./Module.sol",
        "id": 9180,
        "nodeType": "ImportDirective",
        "scope": 9211,
        "sourceUnit": 9368,
        "src": "24:22:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/ModuleManager.sol",
        "file": "./ModuleManager.sol",
        "id": 9181,
        "nodeType": "ImportDirective",
        "scope": 9211,
        "sourceUnit": 9673,
        "src": "47:29:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/OwnerManager.sol",
        "file": "./OwnerManager.sol",
        "id": 9182,
        "nodeType": "ImportDirective",
        "scope": 9211,
        "sourceUnit": 10135,
        "src": "77:28:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9183,
              "name": "ModuleManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9672,
              "src": "392:13:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ModuleManager_$9672",
                "typeString": "contract ModuleManager"
              }
            },
            "id": 9184,
            "nodeType": "InheritanceSpecifier",
            "src": "392:13:70"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9185,
              "name": "OwnerManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10134,
              "src": "407:12:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerManager_$10134",
                "typeString": "contract OwnerManager"
              }
            },
            "id": 9186,
            "nodeType": "InheritanceSpecifier",
            "src": "407:12:70"
          }
        ],
        "contractDependencies": [
          9322,
          9672,
          10134,
          10148,
          10219
        ],
        "contractKind": "contract",
        "documentation": "@title Base Safe - A multisignature wallet with support for modules and owners. This contract needs to be extented to add functionality to execute transactions.\n @author Stefan George - <stefan@gnosis.pm>\n @author Richard Meissner - <richard@gnosis.pm>",
        "fullyImplemented": true,
        "id": 9210,
        "linearizedBaseContracts": [
          9210,
          10134,
          9672,
          9322,
          10148,
          10219
        ],
        "name": "BaseSafe",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9208,
              "nodeType": "Block",
              "src": "857:206:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9199,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9189,
                        "src": "879:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9200,
                        "name": "_threshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9191,
                        "src": "888:10:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9198,
                      "name": "setupOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9805,
                      "src": "867:11:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256)"
                      }
                    },
                    "id": 9201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:32:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9202,
                  "nodeType": "ExpressionStatement",
                  "src": "867:32:70"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9204,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "1047:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9205,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9195,
                        "src": "1051:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9203,
                      "name": "setupModules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9435,
                      "src": "1034:12:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 9206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:22:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9207,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:22:70"
                }
              ]
            },
            "documentation": "@dev Setup function sets initial storage of contract.\n @param _owners List of Safe owners.\n @param _threshold Number of required confirmations for a Safe transaction.\n @param to Contract address for optional delegate call.\n @param data Data payload for optional delegate call.",
            "id": 9209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setupSafe",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9189,
                  "name": "_owners",
                  "nodeType": "VariableDeclaration",
                  "scope": 9209,
                  "src": "759:24:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9187,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "759:7:70",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9188,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "759:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9191,
                  "name": "_threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 9209,
                  "src": "785:18:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9193,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 9209,
                  "src": "805:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9195,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 9209,
                  "src": "817:17:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9194,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "758:77:70"
            },
            "returnParameters": {
              "id": 9197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "857:0:70"
            },
            "scope": 9210,
            "src": "740:323:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 9211,
        "src": "371:694:70"
      }
    ],
    "src": "0:1066:70"
  },
  "legacyAST": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/BaseSafe.sol",
    "exportedSymbols": {
      "BaseSafe": [
        9210
      ]
    },
    "id": 9211,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9179,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:70"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/Module.sol",
        "file": "./Module.sol",
        "id": 9180,
        "nodeType": "ImportDirective",
        "scope": 9211,
        "sourceUnit": 9368,
        "src": "24:22:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/ModuleManager.sol",
        "file": "./ModuleManager.sol",
        "id": 9181,
        "nodeType": "ImportDirective",
        "scope": 9211,
        "sourceUnit": 9673,
        "src": "47:29:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/external/gnosis/safe-contracts/contracts/base/OwnerManager.sol",
        "file": "./OwnerManager.sol",
        "id": 9182,
        "nodeType": "ImportDirective",
        "scope": 9211,
        "sourceUnit": 10135,
        "src": "77:28:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9183,
              "name": "ModuleManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9672,
              "src": "392:13:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ModuleManager_$9672",
                "typeString": "contract ModuleManager"
              }
            },
            "id": 9184,
            "nodeType": "InheritanceSpecifier",
            "src": "392:13:70"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9185,
              "name": "OwnerManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10134,
              "src": "407:12:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerManager_$10134",
                "typeString": "contract OwnerManager"
              }
            },
            "id": 9186,
            "nodeType": "InheritanceSpecifier",
            "src": "407:12:70"
          }
        ],
        "contractDependencies": [
          9322,
          9672,
          10134,
          10148,
          10219
        ],
        "contractKind": "contract",
        "documentation": "@title Base Safe - A multisignature wallet with support for modules and owners. This contract needs to be extented to add functionality to execute transactions.\n @author Stefan George - <stefan@gnosis.pm>\n @author Richard Meissner - <richard@gnosis.pm>",
        "fullyImplemented": true,
        "id": 9210,
        "linearizedBaseContracts": [
          9210,
          10134,
          9672,
          9322,
          10148,
          10219
        ],
        "name": "BaseSafe",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9208,
              "nodeType": "Block",
              "src": "857:206:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9199,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9189,
                        "src": "879:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9200,
                        "name": "_threshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9191,
                        "src": "888:10:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9198,
                      "name": "setupOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9805,
                      "src": "867:11:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256)"
                      }
                    },
                    "id": 9201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:32:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9202,
                  "nodeType": "ExpressionStatement",
                  "src": "867:32:70"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9204,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "1047:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9205,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9195,
                        "src": "1051:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9203,
                      "name": "setupModules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9435,
                      "src": "1034:12:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 9206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:22:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9207,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:22:70"
                }
              ]
            },
            "documentation": "@dev Setup function sets initial storage of contract.\n @param _owners List of Safe owners.\n @param _threshold Number of required confirmations for a Safe transaction.\n @param to Contract address for optional delegate call.\n @param data Data payload for optional delegate call.",
            "id": 9209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setupSafe",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9189,
                  "name": "_owners",
                  "nodeType": "VariableDeclaration",
                  "scope": 9209,
                  "src": "759:24:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9187,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "759:7:70",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9188,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "759:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9191,
                  "name": "_threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 9209,
                  "src": "785:18:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9193,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 9209,
                  "src": "805:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9195,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 9209,
                  "src": "817:17:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9194,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "758:77:70"
            },
            "returnParameters": {
              "id": 9197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "857:0:70"
            },
            "scope": 9210,
            "src": "740:323:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 9211,
        "src": "371:694:70"
      }
    ],
    "src": "0:1066:70"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.21",
  "updatedAt": "2020-01-19T09:48:26.178Z",
  "devdoc": {
    "author": "Stefan George - <stefan@gnosis.pm>Richard Meissner - <richard@gnosis.pm>",
    "methods": {
      "addOwnerWithThreshold(address,uint256)": {
        "details": "Allows to add a new owner to the Safe and update the threshold at the same time.      This can only be done via a Safe transaction.",
        "params": {
          "_threshold": "New threshold.",
          "owner": "New owner address."
        }
      },
      "changeThreshold(uint256)": {
        "details": "Allows to update the number of required confirmations by Safe owners.      This can only be done via a Safe transaction.",
        "params": {
          "_threshold": "New threshold."
        }
      },
      "disableModule(address,address)": {
        "details": "Allows to remove a module from the whitelist.      This can only be done via a Safe transaction.",
        "params": {
          "module": "Module to be removed.",
          "prevModule": "Module that pointed to the module to be removed in the linked list"
        }
      },
      "enableModule(address)": {
        "details": "Allows to add a module to the whitelist.      This can only be done via a Safe transaction.",
        "params": {
          "module": "Module to be whitelisted."
        }
      },
      "execTransactionFromModule(address,uint256,bytes,uint8)": {
        "details": "Allows a Module to execute a Safe transaction without any further confirmations.",
        "params": {
          "data": "Data payload of module transaction.",
          "operation": "Operation type of module transaction.",
          "to": "Destination address of module transaction.",
          "value": "Ether value of module transaction."
        }
      },
      "getModules()": {
        "details": "Returns array of modules.",
        "return": "Array of modules."
      },
      "getOwners()": {
        "details": "Returns array of owners.",
        "return": "Array of Safe owners."
      },
      "removeOwner(address,address,uint256)": {
        "details": "Allows to remove an owner from the Safe and update the threshold at the same time.      This can only be done via a Safe transaction.",
        "params": {
          "_threshold": "New threshold.",
          "owner": "Owner address to be removed.",
          "prevOwner": "Owner that pointed to the owner to be removed in the linked list"
        }
      },
      "swapOwner(address,address,address)": {
        "details": "Allows to swap/replace an owner from the Safe with another address.      This can only be done via a Safe transaction.",
        "params": {
          "newOwner": "New owner address.",
          "oldOwner": "Owner address to be replaced.",
          "prevOwner": "Owner that pointed to the owner to be replaced in the linked list"
        }
      }
    },
    "title": "Base Safe - A multisignature wallet with support for modules and owners. This contract needs to be extented to add functionality to execute transactions."
  },
  "userdoc": {
    "methods": {}
  }
}