{
  "contractName": "TestUtilityToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "contract OrganizationInterface",
          "name": "_organization",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_coGateway",
          "type": "address"
        }
      ],
      "name": "CoGatewaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "allowance_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "coGateway",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "tokenDecimals_",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseSupply",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseSupply",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "tokenName_",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "organization",
      "outputs": [
        {
          "internalType": "contract OrganizationInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_coGatewayAddress",
          "type": "address"
        }
      ],
      "name": "setCoGateway",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "tokenSymbol_",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalTokenSupply_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_coGatewayAddress",
          "type": "address"
        }
      ],
      "name": "setCoGatewayAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "setBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setTotalSupply",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"contract OrganizationInterface\",\"name\":\"_organization\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_coGateway\",\"type\":\"address\"}],\"name\":\"CoGatewaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coGateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenDecimals_\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseSupply\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName_\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"organization\",\"outputs\":[{\"internalType\":\"contract OrganizationInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coGatewayAddress\",\"type\":\"address\"}],\"name\":\"setCoGateway\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coGatewayAddress\",\"type\":\"address\"}],\"name\":\"setCoGatewayAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setTotalSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol_\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokenSupply_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"Address of the owner account.\",\"_spender\":\"Address of the spender account.\"},\"return\":\"allowance_ Remaining allowance for the spender to spend from                   owner's account.\"},\"approve(address,uint256)\":{\"details\":\"Allows _spender address to withdraw from function caller's account,     multiple times up to the _value amount, if this function is called     again it overwrites the current allowance with _value.\",\"params\":{\"_spender\":\"Address authorized to spend from the function caller's                 address.\",\"_value\":\"Amount up to which spender is authorized to spend.\"},\"return\":\"bool `true` for a successful approval, `false` otherwise.\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"Address of the owner account.\"},\"return\":\"balance_ Account balance of the owner account.\"},\"constructor\":{\"details\":\"This is used for testing by mocking certain variables.\",\"params\":{\"_decimals\":\"Decimal of token.\",\"_name\":\"Name of token.\",\"_organization\":\"Address of an organization contract.\",\"_symbol\":\"Symbol of token.\",\"_token\":\"Address of branded token.\"}},\"decimals()\":{\"return\":\"tokenDecimals Decimals of the token.\"},\"decreaseSupply(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens.\"},\"return\":\"success_ `true` if decrease supply is successful, false otherwise.\"},\"exists(address)\":{\"details\":\"For standard ethereum all account addresses exist by default,     so it returns true for all addresses.\",\"return\":\"exists_ `true` for all given address\"},\"increaseSupply(address,uint256)\":{\"params\":{\"_account\":\"Account address for which the balance will be increased. This is payable so that it provides flexibility of                transferring base token to account on increase supply.\",\"_amount\":\"Amount of tokens.\"},\"return\":\"success_ `true` if increase supply is successful, false otherwise.\"},\"name()\":{\"return\":\"tokenName_ Name of the token.\"},\"setBalance(address,uint256)\":{\"params\":{\"_account\":\"Address of an account for which the balance is to be set.\",\"_balance\":\"The balance amount that should be set for the account.\"}},\"setCoGateway(address)\":{\"params\":{\"_coGatewayAddress\":\"CoGateway contract address\"},\"return\":\"success_ `true` if CoGateway address was set\"},\"setCoGatewayAddress(address)\":{\"params\":{\"_coGatewayAddress\":\"CoGateway address.\"}},\"setTotalSupply(uint256)\":{\"params\":{\"_amount\":\"The supply amount.\"}},\"symbol()\":{\"return\":\"tokenSymbol_ Symbol of the token.\"},\"totalSupply()\":{\"details\":\"Get totalTokenSupply as view so that child cannot edit.\",\"return\":\"totalTokenSupply_ Total token supply.\"},\"transfer(address,uint256)\":{\"details\":\"Fires the transfer event, throws if, _from account does not have     enough tokens to spend.\",\"params\":{\"_to\":\"Address to which tokens are transferred.\",\"_value\":\"Amount of tokens to be transferred.\"},\"return\":\"success_ `true` for a successful transfer, `false` otherwise.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Allows a contract to transfer tokens on behalf of _from address     to _to address, the function caller has to be pre-authorized for     multiple transfers up to the total of _value amount by the _from     address.\",\"params\":{\"_from\":\"Address from which tokens are transferred.\",\"_to\":\"Address to which tokens are transferred.\",\"_value\":\"Amount of tokens transferred.\"},\"return\":\"success_ `true` for a successful transfer, `false` otherwise.\"}},\"title\":\"TestUtilityToken contract\"},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Public function to get the allowance.\"},\"approve(address,uint256)\":{\"notice\":\"Public function to approve an account for transfer.\"},\"balanceOf(address)\":{\"notice\":\"Get the balance of an account.\"},\"decimals()\":{\"notice\":\"Public function to get the decimals of the token.\"},\"decreaseSupply(uint256)\":{\"notice\":\"Decreases the token supply.\"},\"exists(address)\":{\"notice\":\"Checks if an address exists.\"},\"increaseSupply(address,uint256)\":{\"notice\":\"Increases the total token supply. Also, adds the number of        tokens to the beneficiary balance.\"},\"name()\":{\"notice\":\"Public function to get the name of the token.\"},\"setBalance(address,uint256)\":{\"notice\":\"Set the balance of an account address for testing.\"},\"setCoGateway(address)\":{\"notice\":\"Sets the CoGateway contract address. This can be called only by        an organization address. This can be set only once.\"},\"setCoGatewayAddress(address)\":{\"notice\":\"Set the CoGateway address for testing.\"},\"setTotalSupply(uint256)\":{\"notice\":\"Set the total supply count for testing.\"},\"symbol()\":{\"notice\":\"Public function to get the symbol of the token.\"},\"totalSupply()\":{\"notice\":\"Public function to get the total supply of the tokens.\"},\"transfer(address,uint256)\":{\"notice\":\"Public function to transfer the token.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Public function transferFrom.\"}},\"notice\":\"This contract is used to mock certain functions of UtilityToken        contract.\"}},\"settings\":{\"compilationTarget\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/TestUtilityToken.sol\":\"TestUtilityToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/CoGatewayUtilityTokenInterface.sol\":{\"keccak256\":\"0x1b0b312c2c5e70b654698a178739b03a3f55cc1013062feaabd7b18aa7df46a1\",\"urls\":[\"bzz-raw://45c35c1add98c6eb58946470c2f324b8a6fb9ac8549d0282ec9531d7ae1dd30e\",\"dweb:/ipfs/QmSj4hSPjosD9wR2aRg5Emm2zgU1SJG786CTw4YS2SDEQw\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/EIP20Interface.sol\":{\"keccak256\":\"0x7c5b888213a8e212d947108846e7a8bb3fd2b23c4ed87a59862ddedd153f93e1\",\"urls\":[\"bzz-raw://379a54e97a1aa1565ba35943b4c728e3938726d5e5452c577af6e6a5e9d456ed\",\"dweb:/ipfs/Qmbxawuc7GEQrT5N6BfMZpzPSRMKRzJ11Zmgh1RErtrNfB\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/EIP20Token.sol\":{\"keccak256\":\"0xe7631bfaad4d7473c06a23f7c5f92d8fbe105ce941a774dfb1b574903003baa6\",\"urls\":[\"bzz-raw://35137c1127d184e2ba3d8482fa5106b60443a39c3a971d5eb95b85189a583fcc\",\"dweb:/ipfs/QmWNyZ74NCyV6GPbY3zNBRMUTVUaQkjgfLVxTBGUskDHcZ\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/UtilityToken.sol\":{\"keccak256\":\"0x68a7b586e1fa4c215a8ac2270c9a4e3de20e68ad58dce8a217ed80f1f9a4b06c\",\"urls\":[\"bzz-raw://ae470f2c2abb62d150a2c4a2da7e22be2ca4b925d2467ecc066c1a7b84ac5d30\",\"dweb:/ipfs/QmcuSnjPATbw2XV1e8sjShRf12UxB8TFi5qAyQgvvMJXSL\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/UtilityTokenInterface.sol\":{\"keccak256\":\"0x3a439adaa4b3e0c1fe8aa8b045c936f48b5bbb4eb35f3fd83ecd19ab79c84c71\",\"urls\":[\"bzz-raw://688911157df119690e750a853b93f0d7a4885aa6d3936c2ffbb218be2d6397de\",\"dweb:/ipfs/QmTZ1jZxJRiZqtoA5EFamTUriUVUtRQXyL36brtXAY4cQY\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/organization/contracts/OrganizationInterface.sol\":{\"keccak256\":\"0xac45d29a498c6531778e0a0cdb31c0d0c2fa6f090dfe9ff99e5ee056657e1962\",\"urls\":[\"bzz-raw://c1269e9993d4f7562855faefbc64f15e7bbe7468777a99611ddfcb4c980c22e1\",\"dweb:/ipfs/QmNRV39vV9RCyovb7EyxWakL2CcMXgoTpToxrfDp9wwQbq\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/organization/contracts/Organized.sol\":{\"keccak256\":\"0x16d60f305a592f262b1603bb0b3b50596a91910bf1ea7de4f9642f01dce01356\",\"urls\":[\"bzz-raw://b7e8bc23f708ba7a0dc2cd1e7c48c8a4248a19260a4052b97fdd18be5f4dd352\",\"dweb:/ipfs/QmWPgpQafZXVAnHPEx9awFircyn2NRfdt7rdqPwv4qqVso\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/TestUtilityToken.sol\":{\"keccak256\":\"0x80b7b7f1d308fa9451b78603bdc49424ae003af0c4320348d68c6f3f8d7ecb91\",\"urls\":[\"bzz-raw://1d6c8300c9ce6800259835db280ad9afc35d3eed6c31b60a84dc3f56daa4ace8\",\"dweb:/ipfs/QmQUcvzq7rU1VESrjW8TqH5yU6ihkF5yE7mQX5MF8Lszxc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200111f3803806200111f833981810160405260a08110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011157600080fd5b9083019060208201858111156200012757600080fd5b82516401000000008111828201881017156200014257600080fd5b82525081516020918201929091019080838360005b838110156200017157818101518382015260200162000157565b50505050905090810190601f1680156200019f5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291905050508484848484808484848260019080519060200190620001de929190620002e3565b508151620001f4906000906020850190620002e3565b506002805460ff191660ff92909216919091179055505060006003556001600160a01b038116620002575760405162461bcd60e51b815260040180806020018281038252602f815260200180620010cf602f913960400191505060405180910390fd5b600680546001600160a01b0319166001600160a01b039283161790558516620002b25760405162461bcd60e51b8152600401808060200182810382526021815260200180620010fe6021913960400191505060405180910390fd5b5050600780546001600160a01b0319166001600160a01b039490941693909317909255506200038895505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200032657805160ff191683800117855562000356565b8280016001018555821562000356579182015b828111156200035657825182559160200191906001019062000339565b506200036492915062000368565b5090565b6200038591905b808211156200036457600081556001016200036f565b90565b610d3780620003986000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806384f48d6a116100ad578063dd62ed3e11610071578063dd62ed3e1461036e578063e30443bc1461039c578063f6a3d24e146103c8578063f7ea7a3d146103ee578063fc0c546a1461040b57610121565b806384f48d6a146102ef57806395d89b41146102f757806398e52f9a146102ff578063a9059cbb1461031c578063ac908e4c1461034857610121565b806323bd4d7a116100f457806323bd4d7a14610233578063313ce5671461025757806370a08231146102755780637992bf1c1461029b57806379fcd8ee146102c357610121565b806306fdde0314610126578063095ea7b3146101a357806318160ddd146101e357806323b872dd146101fd575b600080fd5b61012e610413565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360408110156101b957600080fd5b506001600160a01b0381351690602001356104a9565b604080519115158252519081900360200190f35b6101eb61050f565b60408051918252519081900360200190f35b6101cf6004803603606081101561021357600080fd5b506001600160a01b03813581169160208101359091169060400135610515565b61023b610580565b604080516001600160a01b039092168252519081900360200190f35b61025f61058f565b6040805160ff9092168252519081900360200190f35b6101eb6004803603602081101561028b57600080fd5b50356001600160a01b0316610598565b6102c1600480360360208110156102b157600080fd5b50356001600160a01b03166105b3565b005b6101cf600480360360408110156102d957600080fd5b506001600160a01b0381351690602001356105d5565b61023b610632565b61012e610641565b6101cf6004803603602081101561031557600080fd5b50356106a1565b6101cf6004803603604081101561033257600080fd5b506001600160a01b0381351690602001356106fc565b6101cf6004803603602081101561035e57600080fd5b50356001600160a01b0316610709565b6101eb6004803603604081101561038457600080fd5b506001600160a01b03813581169160200135166107c4565b6102c1600480360360408110156103b257600080fd5b506001600160a01b0381351690602001356107ef565b6101cf600480360360208110156103de57600080fd5b50356001600160a01b031661080b565b6102c16004803603602081101561040457600080fd5b5035610811565b61023b610816565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b5050505050905090565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035490565b6001600160a01b0383166000908152600560209081526040808320338452909152812054610549908363ffffffff61082516565b6001600160a01b038516600090815260056020908152604080832033845290915290205561057884848461083a565b949350505050565b6006546001600160a01b031681565b60025460ff1690565b6001600160a01b031660009081526004602052604090205490565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6008546000906001600160a01b031633146106215760405162461bcd60e51b8152600401808060200182810382526025815260200180610c866025913960400191505060405180910390fd5b61062b83836108f9565b9392505050565b6008546001600160a01b031681565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561049f5780601f106104745761010080835404028352916020019161049f565b6008546000906001600160a01b031633146106ed5760405162461bcd60e51b8152600401808060200182810382526025815260200180610c866025913960400191505060405180910390fd5b6106f68261099b565b92915050565b600061062b33848461083a565b6006546040805163b1ce8eab60e01b815233600482015290516000926001600160a01b03169163b1ce8eab916024808301926020929190829003018186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d602081101561077e57600080fd5b50516107bb5760405162461bcd60e51b8152600401808060200182810382526035815260200180610c516035913960400191505060405180910390fd5b6106f682610a7d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001600160a01b03909116600090815260046020526040902055565b50600190565b600355565b6007546001600160a01b031681565b60008282111561083457600080fd5b50900390565b6001600160a01b038316600090815260046020526040812054610863908363ffffffff61082516565b6001600160a01b038086166000908152600460205260408082209390935590851681522054610898908363ffffffff610c1d16565b6001600160a01b0380851660008181526004602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b6001600160a01b038216600090815260046020526040812054610922908363ffffffff610c1d16565b6001600160a01b03841660009081526004602052604090205560035461094e908363ffffffff610c1d16565b6003556040805183815290516001600160a01b038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b336000908152600460205260408120548211156109f7576040805162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b604482015290519081900360640190fd5b33600090815260046020526040902054610a17908363ffffffff61082516565b33600090815260046020526040902055600354610a3a908363ffffffff61082516565b60035560408051838152905160009133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001919050565b6008546000906001600160a01b031615610ac85760405162461bcd60e51b8152600401808060200182810382526021815260200180610c306021913960400191505060405180910390fd5b6001600160a01b038216610b0d5760405162461bcd60e51b8152600401808060200182810382526025815260200180610cab6025913960400191505060405180910390fd5b600880546001600160a01b0319166001600160a01b0384169081179091556040805163ae86ed8960e01b8152905130929163ae86ed899160048083019260209291908290030181600087803b158015610b6557600080fd5b505af1158015610b79573d6000803e3d6000fd5b505050506040513d6020811015610b8f57600080fd5b50516001600160a01b031614610bd65760405162461bcd60e51b8152600401808060200182810382526033815260200180610cd06033913960400191505060405180910390fd5b600854604080516001600160a01b039092168252517f95bef3949e28dc0675de862971632152312163efcf79d8d22314cae6bdd28f479181900360200190a1506001919050565b60008282018381101561062b57600080fdfe436f47617465776179206164647265737320697320616c7265616479207365742e4f6e6c7920746865206f7267616e697a6174696f6e20697320616c6c6f77656420746f2063616c6c2074686973206d6574686f642e4f6e6c7920436f476174657761792063616e2063616c6c207468652066756e6374696f6e2e436f4761746577617920616464726573732073686f756c64206e6f74206265207a65726f2e436f476174657761792073686f756c64206265206c696e6b656420776974682074686973207574696c69747920746f6b656e2ea265627a7a72315820e579d98eb4b87f4d17470b99c013cbca5c71e24e6c1b9a40ada912703205290c64736f6c634300051000324f7267616e697a6174696f6e20636f6e74726163742061646472657373206d757374206e6f74206265207a65726f2e546f6b656e20616464726573732073686f756c64206e6f74206265207a65726f2e",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806384f48d6a116100ad578063dd62ed3e11610071578063dd62ed3e1461036e578063e30443bc1461039c578063f6a3d24e146103c8578063f7ea7a3d146103ee578063fc0c546a1461040b57610121565b806384f48d6a146102ef57806395d89b41146102f757806398e52f9a146102ff578063a9059cbb1461031c578063ac908e4c1461034857610121565b806323bd4d7a116100f457806323bd4d7a14610233578063313ce5671461025757806370a08231146102755780637992bf1c1461029b57806379fcd8ee146102c357610121565b806306fdde0314610126578063095ea7b3146101a357806318160ddd146101e357806323b872dd146101fd575b600080fd5b61012e610413565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360408110156101b957600080fd5b506001600160a01b0381351690602001356104a9565b604080519115158252519081900360200190f35b6101eb61050f565b60408051918252519081900360200190f35b6101cf6004803603606081101561021357600080fd5b506001600160a01b03813581169160208101359091169060400135610515565b61023b610580565b604080516001600160a01b039092168252519081900360200190f35b61025f61058f565b6040805160ff9092168252519081900360200190f35b6101eb6004803603602081101561028b57600080fd5b50356001600160a01b0316610598565b6102c1600480360360208110156102b157600080fd5b50356001600160a01b03166105b3565b005b6101cf600480360360408110156102d957600080fd5b506001600160a01b0381351690602001356105d5565b61023b610632565b61012e610641565b6101cf6004803603602081101561031557600080fd5b50356106a1565b6101cf6004803603604081101561033257600080fd5b506001600160a01b0381351690602001356106fc565b6101cf6004803603602081101561035e57600080fd5b50356001600160a01b0316610709565b6101eb6004803603604081101561038457600080fd5b506001600160a01b03813581169160200135166107c4565b6102c1600480360360408110156103b257600080fd5b506001600160a01b0381351690602001356107ef565b6101cf600480360360208110156103de57600080fd5b50356001600160a01b031661080b565b6102c16004803603602081101561040457600080fd5b5035610811565b61023b610816565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b5050505050905090565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035490565b6001600160a01b0383166000908152600560209081526040808320338452909152812054610549908363ffffffff61082516565b6001600160a01b038516600090815260056020908152604080832033845290915290205561057884848461083a565b949350505050565b6006546001600160a01b031681565b60025460ff1690565b6001600160a01b031660009081526004602052604090205490565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6008546000906001600160a01b031633146106215760405162461bcd60e51b8152600401808060200182810382526025815260200180610c866025913960400191505060405180910390fd5b61062b83836108f9565b9392505050565b6008546001600160a01b031681565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561049f5780601f106104745761010080835404028352916020019161049f565b6008546000906001600160a01b031633146106ed5760405162461bcd60e51b8152600401808060200182810382526025815260200180610c866025913960400191505060405180910390fd5b6106f68261099b565b92915050565b600061062b33848461083a565b6006546040805163b1ce8eab60e01b815233600482015290516000926001600160a01b03169163b1ce8eab916024808301926020929190829003018186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d602081101561077e57600080fd5b50516107bb5760405162461bcd60e51b8152600401808060200182810382526035815260200180610c516035913960400191505060405180910390fd5b6106f682610a7d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001600160a01b03909116600090815260046020526040902055565b50600190565b600355565b6007546001600160a01b031681565b60008282111561083457600080fd5b50900390565b6001600160a01b038316600090815260046020526040812054610863908363ffffffff61082516565b6001600160a01b038086166000908152600460205260408082209390935590851681522054610898908363ffffffff610c1d16565b6001600160a01b0380851660008181526004602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b6001600160a01b038216600090815260046020526040812054610922908363ffffffff610c1d16565b6001600160a01b03841660009081526004602052604090205560035461094e908363ffffffff610c1d16565b6003556040805183815290516001600160a01b038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b336000908152600460205260408120548211156109f7576040805162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b604482015290519081900360640190fd5b33600090815260046020526040902054610a17908363ffffffff61082516565b33600090815260046020526040902055600354610a3a908363ffffffff61082516565b60035560408051838152905160009133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001919050565b6008546000906001600160a01b031615610ac85760405162461bcd60e51b8152600401808060200182810382526021815260200180610c306021913960400191505060405180910390fd5b6001600160a01b038216610b0d5760405162461bcd60e51b8152600401808060200182810382526025815260200180610cab6025913960400191505060405180910390fd5b600880546001600160a01b0319166001600160a01b0384169081179091556040805163ae86ed8960e01b8152905130929163ae86ed899160048083019260209291908290030181600087803b158015610b6557600080fd5b505af1158015610b79573d6000803e3d6000fd5b505050506040513d6020811015610b8f57600080fd5b50516001600160a01b031614610bd65760405162461bcd60e51b8152600401808060200182810382526033815260200180610cd06033913960400191505060405180910390fd5b600854604080516001600160a01b039092168252517f95bef3949e28dc0675de862971632152312163efcf79d8d22314cae6bdd28f479181900360200190a1506001919050565b60008282018381101561062b57600080fdfe436f47617465776179206164647265737320697320616c7265616479207365742e4f6e6c7920746865206f7267616e697a6174696f6e20697320616c6c6f77656420746f2063616c6c2074686973206d6574686f642e4f6e6c7920436f476174657761792063616e2063616c6c207468652066756e6374696f6e2e436f4761746577617920616464726573732073686f756c64206e6f74206265207a65726f2e436f476174657761792073686f756c64206265206c696e6b656420776974682074686973207574696c69747920746f6b656e2ea265627a7a72315820e579d98eb4b87f4d17470b99c013cbca5c71e24e6c1b9a40ada912703205290c64736f6c63430005100032",
  "sourceMap": "987:1478:33:-;;;1377:264;8:9:-1;5:2;;;30:1;27;20:12;5:2;1377:264:33;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1377:264:33;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1377:264:33;;420:4:-1;411:14;;;;1377:264:33;;;;;411:14:-1;1377:264:33;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1377:264:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1377:264:33;;420:4:-1;411:14;;;;1377:264:33;;;;;411:14:-1;1377:264:33;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1377:264:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:6;1593:7;1602:5;1609:9;1620:13;2437::23;2471:7;2480:5;2487:9;1944:7:22;1930:11;:21;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1961:17:22;;;;:9;;:17;;;;;:::i;:::-;-1:-1:-1;1988:13:22;:25;;-1:-1:-1;;1988:25:22;;;;;;;;;;;;-1:-1:-1;;;2023:16:22;:20;-1:-1:-1;;;;;1888:36:27;;1867:130;;;;-1:-1:-1;;;1867:130:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:12;:28;;-1:-1:-1;;;;;;2008:28:27;-1:-1:-1;;;;;2008:28:27;;;;;;2533:20:23;;2512:100;;;;-1:-1:-1;;;2512:100:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2623:5:23;:14;;-1:-1:-1;;;;;;2623:14:23;-1:-1:-1;;;;;2623:14:23;;;;;;;;;;;-1:-1:-1;987:1478:33;;-1:-1:-1;;;;;;987:1478:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;987:1478:33;;;-1:-1:-1;987:1478:33;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "987:1478:33:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;987:1478:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:102:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2215:102:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6088:260;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6088:260:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3364:152;;;:::i;:::-;;;;;;;;;;;;;;;;5209:287;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5209:287:22;;;;;;;;;;;;;;;;;:::i;1153:41:27:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1153:41:27;;;;;;;;;;;;;;2714:110:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3019:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3019:118:22;-1:-1:-1;;;;;3019:118:22;;:::i;1775:109:33:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1775:109:33;-1:-1:-1;;;;;1775:109:33;;:::i;:::-;;3698:233:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3698:233:23;;;;;;;;:::i;1608:24::-;;;:::i;2458:110:22:-;;;:::i;4132:189:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4132:189:23;;:::i;4432:188:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4432:188:22;;;;;;;;:::i;2976:208:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2976:208:23;-1:-1:-1;;;;;2976:208:23;;:::i;3830:199:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3830:199:22;;;;;;;;;;:::i;2138:109:33:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2138:109:33;;;;;;;;:::i;4577:88:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4577:88:23;-1:-1:-1;;;;;4577:88:23;;:::i;2372:91:33:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2372:91:33;;:::i;1539:20:23:-;;;:::i;2215:102:22:-;2301:9;2288:22;;;;;;;;-1:-1:-1;;2288:22:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2252:24;;2288:22;;2301:9;;2288:22;;2301:9;2288:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:102;:::o;6088:260::-;6231:10;6193:13;6223:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6223:29:22;;;;;;;;;;;:38;;;6277;;;;;;;6193:13;;6223:29;;6231:10;;6277:38;;;;;;;;-1:-1:-1;6337:4:22;;6088:260;-1:-1:-1;;6088:260:22:o;3364:152::-;3493:16;;;3364:152::o;5209:287::-;-1:-1:-1;;;;;5395:14:22;;5337:13;5395:14;;;:7;:14;;;;;;;;5410:10;5395:26;;;;;;;;:38;;5426:6;5395:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;5366:14:22;;;;;;:7;:14;;;;;;;;5381:10;5366:26;;;;;;;:67;5454:35;5374:5;5477:3;5482:6;5454:15;:35::i;:::-;5443:46;5209:287;-1:-1:-1;;;;5209:287:22:o;1153:41:27:-;;;-1:-1:-1;;;;;1153:41:27;;:::o;2714:110:22:-;2804:13;;;;;2714:110::o;3019:118::-;-1:-1:-1;;;;;3114:16:22;3075;3114;;;:8;:16;;;;;;;3019:118::o;1775:109:33:-;1848:9;:29;;-1:-1:-1;;;;;;1848:29:33;-1:-1:-1;;;;;1848:29:33;;;;;;;;;;1775:109::o;3698:233:23:-;1810:9;;3843:13;;-1:-1:-1;;;;;1810:9:23;1788:10;:32;1767:116;;;;-1:-1:-1;;;1767:116:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3883:41;3906:8;3916:7;3883:22;:41::i;:::-;3872:52;3698:233;-1:-1:-1;;;3698:233:23:o;1608:24::-;;;-1:-1:-1;;;;;1608:24:23;;:::o;2458:110:22:-;2550:11;2535:26;;;;;;;;-1:-1:-1;;2535:26:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497;;2535;;2550:11;;2535:26;;2550:11;2535:26;;;;;;;;;;;;;;;;;;;;;;;;4132:189:23;1810:9;;4243:13;;-1:-1:-1;;;;;1810:9:23;1788:10;:32;1767:116;;;;-1:-1:-1;;;1767:116:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4283:31;4306:7;4283:22;:31::i;:::-;4272:42;4132:189;-1:-1:-1;;4132:189:23:o;4432:188:22:-;4533:13;4573:40;4589:10;4601:3;4606:6;4573:15;:40::i;2976:208:23:-;1286:12:27;;:39;;;-1:-1:-1;;;1286:39:27;;1314:10;1286:39;;;;;;3098:13:23;;-1:-1:-1;;;;;1286:12:27;;:27;;:39;;;;;;;;;;;;;;:12;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1286:39:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1286:39:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1286:39:27;1265:139;;;;-1:-1:-1;;;1265:139:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3138:39:23;3159:17;3138:20;:39::i;3830:199:22:-;-1:-1:-1;;;;;3997:15:22;;;3950:18;3997:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;3830:199::o;2138:109:33:-;-1:-1:-1;;;;;2211:18:33;;;;;;;:8;:18;;;;;:29;2138:109::o;4577:88:23:-;-1:-1:-1;4654:4:23;;4577:88::o;2372:91:33:-;2430:16;:26;2372:91::o;1539:20:23:-;;;-1:-1:-1;;;;;1539:20:23;;:::o;1205:145:97:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:97;;;1205:145::o;6876:598:22:-;-1:-1:-1;;;;;7319:15:22;;7009:13;7319:15;;;:8;:15;;;;;;:27;;7339:6;7319:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;7301:15:22;;;;;;;:8;:15;;;;;;:45;;;;7372:13;;;;;;;:25;;7390:6;7372:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;7356:13:22;;;;;;;:8;:13;;;;;;;;;:41;;;;7413:28;;;;;;;7356:13;;7413:28;;;;;;;;;;;;;-1:-1:-1;7463:4:22;;6876:598;-1:-1:-1;;;6876:598:22:o;6196:521:23:-;-1:-1:-1;;;;;6417:18:23;;6319:13;6417:18;;;:8;:18;;;;;;:31;;6440:7;6417:31;:22;:31;:::i;:::-;-1:-1:-1;;;;;6396:18:23;;;;;;:8;:18;;;;;:52;6477:16;;:29;;6498:7;6477:29;:20;:29;:::i;:::-;6458:16;:48;6645:39;;;;;;;;-1:-1:-1;;;;;6645:39:23;;;6662:1;;6645:39;;;;;;;;;-1:-1:-1;6706:4:23;;6196:521;-1:-1:-1;;6196:521:23:o;7069:615::-;7225:10;7166:13;7216:20;;;:8;:20;;;;;;:31;-1:-1:-1;7216:31:23;7195:99;;;;;-1:-1:-1;;;7195:99:23;;;;;;;;;;;;-1:-1:-1;;;7195:99:23;;;;;;;;;;;;;;;7396:10;7387:20;;;;:8;:20;;;;;;:33;;7412:7;7387:33;:24;:33;:::i;:::-;7373:10;7364:20;;;;:8;:20;;;;;:56;7449:16;;:29;;7470:7;7449:29;:20;:29;:::i;:::-;7430:16;:48;7610:41;;;;;;;;7639:1;;7619:10;;7610:41;;;;;;;;;-1:-1:-1;7673:4:23;;7069:615;-1:-1:-1;7069:615:23:o;5018:757::-;5166:9;;5116:13;;-1:-1:-1;;;;;5166:9:23;:23;5145:103;;;;-1:-1:-1;;;5145:103:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5280:24:23;;5259:108;;;;-1:-1:-1;;;5259:108:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:9;:22;;-1:-1:-1;;;;;;5482:22:23;-1:-1:-1;;;;;5482:22:23;;;;;;;;5536:57;;;-1:-1:-1;;;5536:57:23;;;;5621:4;;5482:22;5536:55;;:57;;;;;;;;;;;;;;-1:-1:-1;5482:22:23;5536:57;;;5:2:-1;;;;30:1;27;20:12;5:2;5536:57:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5536:57:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5536:57:23;-1:-1:-1;;;;;5536:90:23;;5515:188;;;;-1:-1:-1;;;5515:188:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5732:9;;5719:23;;;-1:-1:-1;;;;;5732:9:23;;;5719:23;;;;;;;;;;;;-1:-1:-1;5764:4:23;;5018:757;-1:-1:-1;5018:757:23:o;1431:145:97:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;",
  "source": "pragma solidity ^0.5.0;\n\n// Copyright 2019 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ----------------------------------------------------------------------------\n//\n// http://www.simpletoken.org/\n//\n// ----------------------------------------------------------------------------\n\nimport \"../UtilityToken.sol\";\n\n/**\n * @title TestUtilityToken contract\n *\n * @notice This contract is used to mock certain functions of UtilityToken\n *         contract.\n */\ncontract TestUtilityToken is UtilityToken {\n\n    /* Constructor */\n\n    /**\n     * @dev This is used for testing by mocking certain variables.\n     *\n     * @param _token Address of branded token.\n     * @param _symbol Symbol of token.\n     * @param _name Name of token.\n     * @param _decimals Decimal of token.\n     * @param _organization Address of an organization contract.\n     */\n    constructor(\n        address _token,\n        string memory _symbol,\n        string memory _name,\n        uint8 _decimals,\n        OrganizationInterface _organization\n    )\n        public\n        UtilityToken(_token, _symbol, _name, _decimals, _organization)\n    {}\n\n    /**\n     * @notice Set the CoGateway address for testing.\n     *\n     * @param _coGatewayAddress CoGateway address.\n     */\n    function setCoGatewayAddress(address _coGatewayAddress) public {\n        coGateway = _coGatewayAddress;\n    }\n\n    /**\n     * @notice Set the balance of an account address for testing.\n     *\n     * @param _account Address of an account for which the balance is to be set.\n     * @param _balance The balance amount that should be set for the account.\n     */\n    function setBalance(address _account, uint256 _balance) public {\n        balances[_account] = _balance;\n    }\n\n    /**\n     * @notice Set the total supply count for testing.\n     *\n     * @param _amount The supply amount.\n     */\n    function setTotalSupply(uint256 _amount) public {\n        totalTokenSupply = _amount;\n    }\n}\n",
  "sourcePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/TestUtilityToken.sol",
  "ast": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/TestUtilityToken.sol",
    "exportedSymbols": {
      "TestUtilityToken": [
        4082
      ]
    },
    "id": 4083,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4023,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/UtilityToken.sol",
        "file": "../UtilityToken.sol",
        "id": 4024,
        "nodeType": "ImportDirective",
        "scope": 4083,
        "sourceUnit": 3259,
        "src": "813:29:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4025,
              "name": "UtilityToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3258,
              "src": "1016:12:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UtilityToken_$3258",
                "typeString": "contract UtilityToken"
              }
            },
            "id": 4026,
            "nodeType": "InheritanceSpecifier",
            "src": "1016:12:33"
          }
        ],
        "contractDependencies": [
          2726,
          2982,
          3258,
          3291,
          3695
        ],
        "contractKind": "contract",
        "documentation": "@title TestUtilityToken contract\n * @notice This contract is used to mock certain functions of UtilityToken\n        contract.",
        "fullyImplemented": true,
        "id": 4082,
        "linearizedBaseContracts": [
          4082,
          3258,
          3291,
          3695,
          2982,
          2726
        ],
        "name": "TestUtilityToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4046,
              "nodeType": "Block",
              "src": "1639:2:33",
              "statements": []
            },
            "documentation": "@dev This is used for testing by mocking certain variables.\n     * @param _token Address of branded token.\n@param _symbol Symbol of token.\n@param _name Name of token.\n@param _decimals Decimal of token.\n@param _organization Address of an organization contract.",
            "id": 4047,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4039,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4028,
                    "src": "1585:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4040,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4030,
                    "src": "1593:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4041,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4032,
                    "src": "1602:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4042,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4034,
                    "src": "1609:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4043,
                    "name": "_organization",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4036,
                    "src": "1620:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OrganizationInterface_$3642",
                      "typeString": "contract OrganizationInterface"
                    }
                  }
                ],
                "id": 4044,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4038,
                  "name": "UtilityToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3258,
                  "src": "1572:12:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UtilityToken_$3258_$",
                    "typeString": "type(contract UtilityToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1572:62:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4028,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1398:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4030,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1422:21:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4029,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4032,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1453:19:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4031,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4034,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1482:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4036,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1507:35:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OrganizationInterface_$3642",
                    "typeString": "contract OrganizationInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4035,
                    "name": "OrganizationInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3642,
                    "src": "1507:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OrganizationInterface_$3642",
                      "typeString": "contract OrganizationInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1388:160:33"
            },
            "returnParameters": {
              "id": 4045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1639:0:33"
            },
            "scope": 4082,
            "src": "1377:264:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4056,
              "nodeType": "Block",
              "src": "1838:46:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4052,
                      "name": "coGateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3003,
                      "src": "1848:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4053,
                      "name": "_coGatewayAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "1860:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1848:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4055,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:29:33"
                }
              ]
            },
            "documentation": "@notice Set the CoGateway address for testing.\n     * @param _coGatewayAddress CoGateway address.",
            "id": 4057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCoGatewayAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "name": "_coGatewayAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4057,
                  "src": "1804:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1803:27:33"
            },
            "returnParameters": {
              "id": 4051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1838:0:33"
            },
            "scope": 4082,
            "src": "1775:109:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4070,
              "nodeType": "Block",
              "src": "2201:46:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4064,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2747,
                        "src": "2211:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4066,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4065,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4059,
                        "src": "2220:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2211:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4067,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4061,
                      "src": "2232:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2211:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4069,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:29:33"
                }
              ]
            },
            "documentation": "@notice Set the balance of an account address for testing.\n     * @param _account Address of an account for which the balance is to be set.\n@param _balance The balance amount that should be set for the account.",
            "id": 4071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4059,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 4071,
                  "src": "2158:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4061,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 4071,
                  "src": "2176:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2157:36:33"
            },
            "returnParameters": {
              "id": 4063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2201:0:33"
            },
            "scope": 4082,
            "src": "2138:109:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4080,
              "nodeType": "Block",
              "src": "2420:43:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4076,
                      "name": "totalTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2743,
                      "src": "2430:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4077,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4073,
                      "src": "2449:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2430:26:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4079,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:26:33"
                }
              ]
            },
            "documentation": "@notice Set the total supply count for testing.\n     * @param _amount The supply amount.",
            "id": 4081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4073,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4081,
                  "src": "2396:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2396:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2395:17:33"
            },
            "returnParameters": {
              "id": 4075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2420:0:33"
            },
            "scope": 4082,
            "src": "2372:91:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4083,
        "src": "987:1478:33"
      }
    ],
    "src": "0:2466:33"
  },
  "legacyAST": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/TestUtilityToken.sol",
    "exportedSymbols": {
      "TestUtilityToken": [
        4082
      ]
    },
    "id": 4083,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4023,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/UtilityToken.sol",
        "file": "../UtilityToken.sol",
        "id": 4024,
        "nodeType": "ImportDirective",
        "scope": 4083,
        "sourceUnit": 3259,
        "src": "813:29:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4025,
              "name": "UtilityToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3258,
              "src": "1016:12:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UtilityToken_$3258",
                "typeString": "contract UtilityToken"
              }
            },
            "id": 4026,
            "nodeType": "InheritanceSpecifier",
            "src": "1016:12:33"
          }
        ],
        "contractDependencies": [
          2726,
          2982,
          3258,
          3291,
          3695
        ],
        "contractKind": "contract",
        "documentation": "@title TestUtilityToken contract\n * @notice This contract is used to mock certain functions of UtilityToken\n        contract.",
        "fullyImplemented": true,
        "id": 4082,
        "linearizedBaseContracts": [
          4082,
          3258,
          3291,
          3695,
          2982,
          2726
        ],
        "name": "TestUtilityToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4046,
              "nodeType": "Block",
              "src": "1639:2:33",
              "statements": []
            },
            "documentation": "@dev This is used for testing by mocking certain variables.\n     * @param _token Address of branded token.\n@param _symbol Symbol of token.\n@param _name Name of token.\n@param _decimals Decimal of token.\n@param _organization Address of an organization contract.",
            "id": 4047,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4039,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4028,
                    "src": "1585:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4040,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4030,
                    "src": "1593:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4041,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4032,
                    "src": "1602:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4042,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4034,
                    "src": "1609:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4043,
                    "name": "_organization",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4036,
                    "src": "1620:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OrganizationInterface_$3642",
                      "typeString": "contract OrganizationInterface"
                    }
                  }
                ],
                "id": 4044,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4038,
                  "name": "UtilityToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3258,
                  "src": "1572:12:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UtilityToken_$3258_$",
                    "typeString": "type(contract UtilityToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1572:62:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4028,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1398:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4030,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1422:21:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4029,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4032,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1453:19:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4031,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4034,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1482:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4036,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1507:35:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OrganizationInterface_$3642",
                    "typeString": "contract OrganizationInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4035,
                    "name": "OrganizationInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3642,
                    "src": "1507:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OrganizationInterface_$3642",
                      "typeString": "contract OrganizationInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1388:160:33"
            },
            "returnParameters": {
              "id": 4045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1639:0:33"
            },
            "scope": 4082,
            "src": "1377:264:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4056,
              "nodeType": "Block",
              "src": "1838:46:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4052,
                      "name": "coGateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3003,
                      "src": "1848:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4053,
                      "name": "_coGatewayAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "1860:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1848:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4055,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:29:33"
                }
              ]
            },
            "documentation": "@notice Set the CoGateway address for testing.\n     * @param _coGatewayAddress CoGateway address.",
            "id": 4057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCoGatewayAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "name": "_coGatewayAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4057,
                  "src": "1804:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1803:27:33"
            },
            "returnParameters": {
              "id": 4051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1838:0:33"
            },
            "scope": 4082,
            "src": "1775:109:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4070,
              "nodeType": "Block",
              "src": "2201:46:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4064,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2747,
                        "src": "2211:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4066,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4065,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4059,
                        "src": "2220:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2211:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4067,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4061,
                      "src": "2232:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2211:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4069,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:29:33"
                }
              ]
            },
            "documentation": "@notice Set the balance of an account address for testing.\n     * @param _account Address of an account for which the balance is to be set.\n@param _balance The balance amount that should be set for the account.",
            "id": 4071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4059,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 4071,
                  "src": "2158:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4061,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 4071,
                  "src": "2176:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2157:36:33"
            },
            "returnParameters": {
              "id": 4063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2201:0:33"
            },
            "scope": 4082,
            "src": "2138:109:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4080,
              "nodeType": "Block",
              "src": "2420:43:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4076,
                      "name": "totalTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2743,
                      "src": "2430:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4077,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4073,
                      "src": "2449:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2430:26:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4079,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:26:33"
                }
              ]
            },
            "documentation": "@notice Set the total supply count for testing.\n     * @param _amount The supply amount.",
            "id": 4081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4073,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4081,
                  "src": "2396:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2396:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2395:17:33"
            },
            "returnParameters": {
              "id": 4075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2420:0:33"
            },
            "scope": 4082,
            "src": "2372:91:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4083,
        "src": "987:1478:33"
      }
    ],
    "src": "0:2466:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.21",
  "updatedAt": "2020-01-21T06:50:59.714Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_owner": "Address of the owner account.",
          "_spender": "Address of the spender account."
        },
        "return": "allowance_ Remaining allowance for the spender to spend from                   owner's account."
      },
      "approve(address,uint256)": {
        "details": "Allows _spender address to withdraw from function caller's account,     multiple times up to the _value amount, if this function is called     again it overwrites the current allowance with _value.",
        "params": {
          "_spender": "Address authorized to spend from the function caller's                 address.",
          "_value": "Amount up to which spender is authorized to spend."
        },
        "return": "bool `true` for a successful approval, `false` otherwise."
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "Address of the owner account."
        },
        "return": "balance_ Account balance of the owner account."
      },
      "constructor": {
        "details": "This is used for testing by mocking certain variables.",
        "params": {
          "_decimals": "Decimal of token.",
          "_name": "Name of token.",
          "_organization": "Address of an organization contract.",
          "_symbol": "Symbol of token.",
          "_token": "Address of branded token."
        }
      },
      "decimals()": {
        "return": "tokenDecimals Decimals of the token."
      },
      "decreaseSupply(uint256)": {
        "params": {
          "_amount": "Amount of tokens."
        },
        "return": "success_ `true` if decrease supply is successful, false otherwise."
      },
      "exists(address)": {
        "details": "For standard ethereum all account addresses exist by default,     so it returns true for all addresses.",
        "return": "exists_ `true` for all given address"
      },
      "increaseSupply(address,uint256)": {
        "params": {
          "_account": "Account address for which the balance will be increased. This is payable so that it provides flexibility of                transferring base token to account on increase supply.",
          "_amount": "Amount of tokens."
        },
        "return": "success_ `true` if increase supply is successful, false otherwise."
      },
      "name()": {
        "return": "tokenName_ Name of the token."
      },
      "setBalance(address,uint256)": {
        "params": {
          "_account": "Address of an account for which the balance is to be set.",
          "_balance": "The balance amount that should be set for the account."
        }
      },
      "setCoGateway(address)": {
        "params": {
          "_coGatewayAddress": "CoGateway contract address"
        },
        "return": "success_ `true` if CoGateway address was set"
      },
      "setCoGatewayAddress(address)": {
        "params": {
          "_coGatewayAddress": "CoGateway address."
        }
      },
      "setTotalSupply(uint256)": {
        "params": {
          "_amount": "The supply amount."
        }
      },
      "symbol()": {
        "return": "tokenSymbol_ Symbol of the token."
      },
      "totalSupply()": {
        "details": "Get totalTokenSupply as view so that child cannot edit.",
        "return": "totalTokenSupply_ Total token supply."
      },
      "transfer(address,uint256)": {
        "details": "Fires the transfer event, throws if, _from account does not have     enough tokens to spend.",
        "params": {
          "_to": "Address to which tokens are transferred.",
          "_value": "Amount of tokens to be transferred."
        },
        "return": "success_ `true` for a successful transfer, `false` otherwise."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Allows a contract to transfer tokens on behalf of _from address     to _to address, the function caller has to be pre-authorized for     multiple transfers up to the total of _value amount by the _from     address.",
        "params": {
          "_from": "Address from which tokens are transferred.",
          "_to": "Address to which tokens are transferred.",
          "_value": "Amount of tokens transferred."
        },
        "return": "success_ `true` for a successful transfer, `false` otherwise."
      }
    },
    "title": "TestUtilityToken contract"
  },
  "userdoc": {
    "methods": {
      "allowance(address,address)": {
        "notice": "Public function to get the allowance."
      },
      "approve(address,uint256)": {
        "notice": "Public function to approve an account for transfer."
      },
      "balanceOf(address)": {
        "notice": "Get the balance of an account."
      },
      "decimals()": {
        "notice": "Public function to get the decimals of the token."
      },
      "decreaseSupply(uint256)": {
        "notice": "Decreases the token supply."
      },
      "exists(address)": {
        "notice": "Checks if an address exists."
      },
      "increaseSupply(address,uint256)": {
        "notice": "Increases the total token supply. Also, adds the number of        tokens to the beneficiary balance."
      },
      "name()": {
        "notice": "Public function to get the name of the token."
      },
      "setBalance(address,uint256)": {
        "notice": "Set the balance of an account address for testing."
      },
      "setCoGateway(address)": {
        "notice": "Sets the CoGateway contract address. This can be called only by        an organization address. This can be set only once."
      },
      "setCoGatewayAddress(address)": {
        "notice": "Set the CoGateway address for testing."
      },
      "setTotalSupply(uint256)": {
        "notice": "Set the total supply count for testing."
      },
      "symbol()": {
        "notice": "Public function to get the symbol of the token."
      },
      "totalSupply()": {
        "notice": "Public function to get the total supply of the tokens."
      },
      "transfer(address,uint256)": {
        "notice": "Public function to transfer the token."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Public function transferFrom."
      }
    },
    "notice": "This contract is used to mock certain functions of UtilityToken        contract."
  }
}