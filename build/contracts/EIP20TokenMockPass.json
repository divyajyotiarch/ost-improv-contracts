{
  "contractName": "EIP20TokenMockPass",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setBalance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"Address of the owner account.\",\"_spender\":\"Address of the spender account.\"},\"return\":\"Remaining allowance for the spender to spend from         owner's account.\"},\"approve(address,uint256)\":{\"details\":\"Allows _spender address to withdraw from function caller's      account, multiple times up to the _value amount, if this      function is called again it overwrites the current allowance      with _value.\",\"params\":{\"_spender\":\"Address authorized to spend from the function caller's                 address.\",\"_value\":\"Amount up to which spender is authorized to spend.\"},\"return\":\"success_ True for a successful approval, false otherwise.\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"Address of the owner account.\"},\"return\":\"Account balance of the owner account.\"},\"constructor\":{\"params\":{\"_decimals\":\"The value to which tokenDecimals, defined in EIP20Token,                 is set.\",\"_name\":\"The value to which tokenName, defined in EIP20Token,             is set.\",\"_symbol\":\"The value to which tokenSymbol, defined in EIP20Token,               is set.\"}},\"decimals()\":{\"return\":\"Decimal places of the token.\"},\"name()\":{\"return\":\"Name of the token.\"},\"setBalance(address,uint256)\":{\"params\":{\"_owner\":\"Owner.\",\"_value\":\"Value.\"},\"return\":\"True if balances of the _owner is set.\"},\"symbol()\":{\"return\":\"Symbol of the token.\"},\"totalSupply()\":{\"return\":\"Returns 0.\"},\"transfer(address,uint256)\":{\"return\":\"bool True.\"},\"transferFrom(address,address,uint256)\":{\"return\":\"bool True.\"}},\"title\":\"Mock EIP20 Token Pass.\"},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Public view function allowance.\"},\"approve(address,uint256)\":{\"notice\":\"Public function approve.\"},\"balanceOf(address)\":{\"notice\":\"Public view function balanceOf.\"},\"decimals()\":{\"notice\":\"Public view function decimals.\"},\"name()\":{\"notice\":\"Public view function name.\"},\"setBalance(address,uint256)\":{\"notice\":\"Takes _owner, _value; sets balance of _owner to _value.\"},\"symbol()\":{\"notice\":\"Public view function symbol.\"},\"totalSupply()\":{\"notice\":\"Returns 0 as mock total supply.\"},\"transfer(address,uint256)\":{\"notice\":\"Mocks passing transfer.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Mocks passing transferFrom.\"}},\"notice\":\"Mocks EIP20 token functions as passing.\"}},\"settings\":{\"compilationTarget\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/test/eip20token/EIP20TokenMockPass.sol\":\"EIP20TokenMockPass\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/EIP20Interface.sol\":{\"keccak256\":\"0xbeaaf85d13beb4fd9d6dd30b4ff99bb2ab7644959b99b6fda2057756dab5fd29\",\"urls\":[\"bzz-raw://1d47058a38ae4f99ce0849684b3ac9350222fc9ff1fe0d13d55473d916414bd0\",\"dweb:/ipfs/QmT1wTqqVck8c7BGmDnUAbEQmHC4C6mSdJMHqLhAamNkyN\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/EIP20Token.sol\":{\"keccak256\":\"0x528629da858c3279823f9de5f041bc2bbade251cfbf2e1e2ea11ca5c8cb5fa69\",\"urls\":[\"bzz-raw://7c0a710dd46335b214dcefdb3283686edeae6d66718983bfba49d04f895e690a\",\"dweb:/ipfs/QmaZymfJ9e1u6mxMeiw6uuFQmycxsFaAybeeHE8R2z4jpF\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/EIP20TokenMock.sol\":{\"keccak256\":\"0x931573552cf9c20ecef278e8454a89530adc03c9d650d2bb92212d3d24949f83\",\"urls\":[\"bzz-raw://0adb6d4d702eb5304c65ad356fffef46cc1a41ce7a08878ba81aefbc2dd7a5d8\",\"dweb:/ipfs/QmQ2JSi7iZtC2JDtQUpLqgF9Wr8UF5anamoN16DFWRncKw\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/test/eip20token/EIP20TokenMockPass.sol\":{\"keccak256\":\"0xe0cace708172b8f42565af31f290332f1f86fe6bbcf9b1f67bc27fec18e93349\",\"urls\":[\"bzz-raw://a326975efec36ca8a6d5e223a7c2d93766857b1023958ed23f1ddab8ebdca5b7\",\"dweb:/ipfs/QmTVFYa8SvP3LDLrYQKyNRjEFSKvKoqGvSBM2qpxTb9mAn\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516107313803806107318339818101604052606081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156100ff57600080fd5b90830190602082018581111561011457600080fd5b825164010000000081118282018810171561012e57600080fd5b82525081516020918201929091019080838360005b8381101561015b578181015183820152602001610143565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b506040526020908101518551909350859250849184918491849184916101b3916001918601906101ef565b5081516101c79060009060208501906101ef565b506002805460ff191660ff92909216919091179055505060006003555061028a945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061023057805160ff191683800117855561025d565b8280016001018555821561025d579182015b8281111561025d578251825591602001919060010190610242565b5061026992915061026d565b5090565b61028791905b808211156102695760008155600101610273565b90565b610498806102996000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146101ce57806395d89b41146101f4578063a9059cbb146101fc578063dd62ed3e14610228578063e30443bc146102565761009e565b806306fdde03146100a3578063095ea7b31461012057806318160ddd1461016057806323b872dd1461017a578063313ce567146101b0575b600080fd5b6100ab610282565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014c6004803603604081101561013657600080fd5b506001600160a01b038135169060200135610318565b604080519115158252519081900360200190f35b61016861037e565b60408051918252519081900360200190f35b61014c6004803603606081101561019057600080fd5b506001600160a01b03813581169160208101359091169060400135610383565b6101b861038c565b6040805160ff9092168252519081900360200190f35b610168600480360360208110156101e457600080fd5b50356001600160a01b0316610395565b6100ab6103b0565b61014c6004803603604081101561021257600080fd5b506001600160a01b038135169060200135610410565b6101686004803603604081101561023e57600080fd5b506001600160a01b0381358116916020013516610418565b61014c6004803603604081101561026c57600080fd5b506001600160a01b038135169060200135610443565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600090565b60019392505050565b60025460ff1690565b6001600160a01b031660009081526004602052604090205490565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561030e5780601f106102e35761010080835404028352916020019161030e565b600192915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001600160a01b039190911660009081526004602052604090205560019056fea265627a7a72315820eb52e32dca33c6a1d0169fa5c01a7dab81d331446efbdaaa60af41a4dea8876064736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146101ce57806395d89b41146101f4578063a9059cbb146101fc578063dd62ed3e14610228578063e30443bc146102565761009e565b806306fdde03146100a3578063095ea7b31461012057806318160ddd1461016057806323b872dd1461017a578063313ce567146101b0575b600080fd5b6100ab610282565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014c6004803603604081101561013657600080fd5b506001600160a01b038135169060200135610318565b604080519115158252519081900360200190f35b61016861037e565b60408051918252519081900360200190f35b61014c6004803603606081101561019057600080fd5b506001600160a01b03813581169160208101359091169060400135610383565b6101b861038c565b6040805160ff9092168252519081900360200190f35b610168600480360360208110156101e457600080fd5b50356001600160a01b0316610395565b6100ab6103b0565b61014c6004803603604081101561021257600080fd5b506001600160a01b038135169060200135610410565b6101686004803603604081101561023e57600080fd5b506001600160a01b0381358116916020013516610418565b61014c6004803603604081101561026c57600080fd5b506001600160a01b038135169060200135610443565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600090565b60019392505050565b60025460ff1690565b6001600160a01b031660009081526004602052604090205490565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561030e5780601f106102e35761010080835404028352916020019161030e565b600192915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001600160a01b039190911660009081526004602052604090205560019056fea265627a7a72315820eb52e32dca33c6a1d0169fa5c01a7dab81d331446efbdaaa60af41a4dea8876064736f6c63430005100032",
  "sourceMap": "749:1090:12:-;;;1162:175;8:9:-1;5:2;;;30:1;27;20:12;5:2;1162:175:12;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1162:175:12;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1162:175:12;;420:4:-1;411:14;;;;1162:175:12;;;;;411:14:-1;1162:175:12;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1162:175:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1162:175:12;;420:4:-1;411:14;;;;1162:175:12;;;;;411:14:-1;1162:175:12;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1162:175:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1162:175:12;;;;;;;1519:21:3;;1162:175:12;;-1:-1:-1;1288:7:12;;-1:-1:-1;1297:5:12;;1162:175;;1288:7;;1297:5;;1162:175;;1519:21:3;;:11;;:21;;;;:::i;:::-;-1:-1:-1;1550:17:3;;;;:9;;:17;;;;;:::i;:::-;-1:-1:-1;1577:13:3;:25;;-1:-1:-1;;1577:25:3;;;;;;;;;;;;-1:-1:-1;;;1612:16:3;:20;-1:-1:-1;749:1090:12;;-1:-1:-1;;;;;749:1090:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;749:1090:12;;;-1:-1:-1;749:1090:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "749:1090:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;749:1090:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:85:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1775:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5874:256;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5874:256:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1431:106:4;;;:::i;:::-;;;;;;;;;;;;;;;;1466:149:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1466:149:12;;;;;;;;;;;;;;;;;:::i;2181:85:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2456:105;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2456:105:3;-1:-1:-1;;;;;2456:105:3;;:::i;1971:89::-;;;:::i;1709:128:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1709:128:12;;;;;;;;:::i;3164:182:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3164:182:3;;;;;;;;;;:::i;1754:179:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1754:179:4;;;;;;;;:::i;1775:85:3:-;1844:9;1837:16;;;;;;;;-1:-1:-1;;1837:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:13;;1837:16;;1844:9;;1837:16;;1844:9;1837:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:85;:::o;5874:256::-;6017:10;5979:13;6009:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6009:29:3;;;;;;;;;;;:38;;;6063;;;;;;;5979:13;;6009:29;;6017:10;;6063:38;;;;;;;;-1:-1:-1;6119:4:3;5874:256;;;;:::o;1431:106:4:-;1499:7;1431:106;:::o;1466:149:12:-;1604:4;1466:149;;;;;:::o;2181:85:3:-;2246:13;;;;2181:85;:::o;2456:105::-;-1:-1:-1;;;;;2538:16:3;2512:7;2538:16;;;:8;:16;;;;;;;2456:105::o;1971:89::-;2042:11;2035:18;;;;;;;;-1:-1:-1;;2035:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2010:13;;2035:18;;2042:11;;2035:18;;2042:11;2035:18;;;;;;;;;;;;;;;;;;;;;;;;1709:128:12;1826:4;1709:128;;;;:::o;3164:182:3:-;-1:-1:-1;;;;;3314:15:3;;;3284:7;3314:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;3164:182::o;1754:179:4:-;-1:-1:-1;;;;;1880:16:4;;;;1860:4;1880:16;;;:8;:16;;;;;:25;1922:4;;1754:179::o",
  "source": "pragma solidity ^0.5.0;\n\n\n// Copyright 2019 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nimport \"../../EIP20TokenMock.sol\";\n\n\n/**\n *  @title Mock EIP20 Token Pass.\n *\n *  @notice Mocks EIP20 token functions as passing.\n */\ncontract EIP20TokenMockPass is EIP20TokenMock {\n\n    /* Constructor */\n\n    /**\n     * @param _symbol The value to which tokenSymbol, defined in EIP20Token,\n     *                is set.\n     * @param _name The value to which tokenName, defined in EIP20Token,\n     *              is set.\n     * @param _decimals The value to which tokenDecimals, defined in EIP20Token,\n     *                  is set.\n     */\n    constructor(\n        string memory _symbol,\n        string memory _name,\n        uint8 _decimals\n    )\n        EIP20TokenMock(_symbol, _name, _decimals)\n        public\n    { }\n\n\n    /* External Functions */\n\n    /**\n     * @notice Mocks passing transferFrom.\n     *\n     * @return bool True.\n     */\n    function transferFrom(\n        address,\n        address,\n        uint256\n    )\n        public\n        returns (bool)\n    {\n        return true;\n    }\n\n    /**\n     * @notice Mocks passing transfer.\n     *\n     * @return bool True.\n     */\n    function transfer(\n        address,\n        uint256\n    )\n        public\n        returns (bool)\n    {\n        return true;\n    }\n}",
  "sourcePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/test/eip20token/EIP20TokenMockPass.sol",
  "ast": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/test/eip20token/EIP20TokenMockPass.sol",
    "exportedSymbols": {
      "EIP20TokenMockPass": [
        2378
      ]
    },
    "id": 2379,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2333,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/EIP20TokenMock.sol",
        "file": "../../EIP20TokenMock.sol",
        "id": 2334,
        "nodeType": "ImportDirective",
        "scope": 2379,
        "sourceUnit": 1300,
        "src": "615:34:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2335,
              "name": "EIP20TokenMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1299,
              "src": "780:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EIP20TokenMock_$1299",
                "typeString": "contract EIP20TokenMock"
              }
            },
            "id": 2336,
            "nodeType": "InheritanceSpecifier",
            "src": "780:14:12"
          }
        ],
        "contractDependencies": [
          1008,
          1252,
          1299
        ],
        "contractKind": "contract",
        "documentation": " @title Mock EIP20 Token Pass.\n *  @notice Mocks EIP20 token functions as passing.",
        "fullyImplemented": true,
        "id": 2378,
        "linearizedBaseContracts": [
          2378,
          1299,
          1252,
          1008
        ],
        "name": "EIP20TokenMockPass",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2350,
              "nodeType": "Block",
              "src": "1334:3:12",
              "statements": []
            },
            "documentation": "@param _symbol The value to which tokenSymbol, defined in EIP20Token,\n               is set.\n@param _name The value to which tokenName, defined in EIP20Token,\n             is set.\n@param _decimals The value to which tokenDecimals, defined in EIP20Token,\n                 is set.",
            "id": 2351,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2345,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2338,
                    "src": "1288:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2346,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2340,
                    "src": "1297:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2347,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2342,
                    "src": "1304:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2348,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2344,
                  "name": "EIP20TokenMock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1299,
                  "src": "1273:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_EIP20TokenMock_$1299_$",
                    "typeString": "type(contract EIP20TokenMock)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:41:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2338,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1183:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2337,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2340,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1214:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2342,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1243:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1173:91:12"
            },
            "returnParameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:0:12"
            },
            "scope": 2378,
            "src": "1162:175:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2364,
              "nodeType": "Block",
              "src": "1587:28:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1604:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2361,
                  "id": 2363,
                  "nodeType": "Return",
                  "src": "1597:11:12"
                }
              ]
            },
            "documentation": "@notice Mocks passing transferFrom.\n     * @return bool True.",
            "id": 2365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2353,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "1497:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "1514:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2357,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "1531:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1487:57:12"
            },
            "returnParameters": {
              "id": 2361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2360,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "1577:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2359,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1576:6:12"
            },
            "scope": 2378,
            "src": "1466:149:12",
            "stateMutability": "nonpayable",
            "superFunction": 1223,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2376,
              "nodeType": "Block",
              "src": "1809:28:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1826:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2373,
                  "id": 2375,
                  "nodeType": "Return",
                  "src": "1819:11:12"
                }
              ]
            },
            "documentation": "@notice Mocks passing transfer.\n     * @return bool True.",
            "id": 2377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2367,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "1736:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "1753:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:40:12"
            },
            "returnParameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "1799:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1798:6:12"
            },
            "scope": 2378,
            "src": "1709:128:12",
            "stateMutability": "nonpayable",
            "superFunction": 1164,
            "visibility": "public"
          }
        ],
        "scope": 2379,
        "src": "749:1090:12"
      }
    ],
    "src": "0:1839:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/test/eip20token/EIP20TokenMockPass.sol",
    "exportedSymbols": {
      "EIP20TokenMockPass": [
        2378
      ]
    },
    "id": 2379,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2333,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/EIP20TokenMock.sol",
        "file": "../../EIP20TokenMock.sol",
        "id": 2334,
        "nodeType": "ImportDirective",
        "scope": 2379,
        "sourceUnit": 1300,
        "src": "615:34:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2335,
              "name": "EIP20TokenMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1299,
              "src": "780:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EIP20TokenMock_$1299",
                "typeString": "contract EIP20TokenMock"
              }
            },
            "id": 2336,
            "nodeType": "InheritanceSpecifier",
            "src": "780:14:12"
          }
        ],
        "contractDependencies": [
          1008,
          1252,
          1299
        ],
        "contractKind": "contract",
        "documentation": " @title Mock EIP20 Token Pass.\n *  @notice Mocks EIP20 token functions as passing.",
        "fullyImplemented": true,
        "id": 2378,
        "linearizedBaseContracts": [
          2378,
          1299,
          1252,
          1008
        ],
        "name": "EIP20TokenMockPass",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2350,
              "nodeType": "Block",
              "src": "1334:3:12",
              "statements": []
            },
            "documentation": "@param _symbol The value to which tokenSymbol, defined in EIP20Token,\n               is set.\n@param _name The value to which tokenName, defined in EIP20Token,\n             is set.\n@param _decimals The value to which tokenDecimals, defined in EIP20Token,\n                 is set.",
            "id": 2351,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2345,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2338,
                    "src": "1288:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2346,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2340,
                    "src": "1297:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2347,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2342,
                    "src": "1304:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2348,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2344,
                  "name": "EIP20TokenMock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1299,
                  "src": "1273:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_EIP20TokenMock_$1299_$",
                    "typeString": "type(contract EIP20TokenMock)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:41:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2338,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1183:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2337,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2340,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1214:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2342,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1243:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1173:91:12"
            },
            "returnParameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:0:12"
            },
            "scope": 2378,
            "src": "1162:175:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2364,
              "nodeType": "Block",
              "src": "1587:28:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1604:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2361,
                  "id": 2363,
                  "nodeType": "Return",
                  "src": "1597:11:12"
                }
              ]
            },
            "documentation": "@notice Mocks passing transferFrom.\n     * @return bool True.",
            "id": 2365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2353,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "1497:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "1514:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2357,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "1531:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1487:57:12"
            },
            "returnParameters": {
              "id": 2361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2360,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "1577:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2359,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1576:6:12"
            },
            "scope": 2378,
            "src": "1466:149:12",
            "stateMutability": "nonpayable",
            "superFunction": 1223,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2376,
              "nodeType": "Block",
              "src": "1809:28:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1826:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2373,
                  "id": 2375,
                  "nodeType": "Return",
                  "src": "1819:11:12"
                }
              ]
            },
            "documentation": "@notice Mocks passing transfer.\n     * @return bool True.",
            "id": 2377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2367,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "1736:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "1753:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:40:12"
            },
            "returnParameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "1799:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1798:6:12"
            },
            "scope": 2378,
            "src": "1709:128:12",
            "stateMutability": "nonpayable",
            "superFunction": 1164,
            "visibility": "public"
          }
        ],
        "scope": 2379,
        "src": "749:1090:12"
      }
    ],
    "src": "0:1839:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.21",
  "updatedAt": "2020-01-24T12:21:06.888Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_owner": "Address of the owner account.",
          "_spender": "Address of the spender account."
        },
        "return": "Remaining allowance for the spender to spend from         owner's account."
      },
      "approve(address,uint256)": {
        "details": "Allows _spender address to withdraw from function caller's      account, multiple times up to the _value amount, if this      function is called again it overwrites the current allowance      with _value.",
        "params": {
          "_spender": "Address authorized to spend from the function caller's                 address.",
          "_value": "Amount up to which spender is authorized to spend."
        },
        "return": "success_ True for a successful approval, false otherwise."
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "Address of the owner account."
        },
        "return": "Account balance of the owner account."
      },
      "constructor": {
        "params": {
          "_decimals": "The value to which tokenDecimals, defined in EIP20Token,                 is set.",
          "_name": "The value to which tokenName, defined in EIP20Token,             is set.",
          "_symbol": "The value to which tokenSymbol, defined in EIP20Token,               is set."
        }
      },
      "decimals()": {
        "return": "Decimal places of the token."
      },
      "name()": {
        "return": "Name of the token."
      },
      "setBalance(address,uint256)": {
        "params": {
          "_owner": "Owner.",
          "_value": "Value."
        },
        "return": "True if balances of the _owner is set."
      },
      "symbol()": {
        "return": "Symbol of the token."
      },
      "totalSupply()": {
        "return": "Returns 0."
      },
      "transfer(address,uint256)": {
        "return": "bool True."
      },
      "transferFrom(address,address,uint256)": {
        "return": "bool True."
      }
    },
    "title": "Mock EIP20 Token Pass."
  },
  "userdoc": {
    "methods": {
      "allowance(address,address)": {
        "notice": "Public view function allowance."
      },
      "approve(address,uint256)": {
        "notice": "Public function approve."
      },
      "balanceOf(address)": {
        "notice": "Public view function balanceOf."
      },
      "decimals()": {
        "notice": "Public view function decimals."
      },
      "name()": {
        "notice": "Public view function name."
      },
      "setBalance(address,uint256)": {
        "notice": "Takes _owner, _value; sets balance of _owner to _value."
      },
      "symbol()": {
        "notice": "Public view function symbol."
      },
      "totalSupply()": {
        "notice": "Returns 0 as mock total supply."
      },
      "transfer(address,uint256)": {
        "notice": "Mocks passing transfer."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Mocks passing transferFrom."
      }
    },
    "notice": "Mocks EIP20 token functions as passing."
  }
}