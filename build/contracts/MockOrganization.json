{
  "contractName": "MockOrganization",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_worker",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_organization",
          "type": "address"
        }
      ],
      "name": "isOrganization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOrganization_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_worker",
          "type": "address"
        }
      ],
      "name": "isWorker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWorker_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_worker\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_organization\",\"type\":\"address\"}],\"name\":\"isOrganization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOrganization_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_worker\",\"type\":\"address\"}],\"name\":\"isWorker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWorker_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address that should be used as a registered owner.\",\"_worker\":\"Address that should be used as a registered worker.\"}},\"isOrganization(address)\":{\"params\":{\"_organization\":\"Address to check.\"},\"return\":\"isOrganization_ True if the given address represents the                        organization. Returns false otherwise.\"},\"isWorker(address)\":{\"params\":{\"_worker\":\"Address to check.\"},\"return\":\"isWorker_ True if the given address is a registered worker.\"}},\"title\":\"Mocks an organization interface implementation.\"},\"userdoc\":{\"methods\":{\"constructor\":\"Sets the address of the owner and the worker.\",\"isOrganization(address)\":{\"notice\":\"Checks if an address is currently registered as the organization.\"},\"isWorker(address)\":{\"notice\":\"Checks if an address is currently registered as an active worker.\"}},\"notice\":\"The only valid registered owner and worker are given at        construction and cannot be changed or removed.\"}},\"settings\":{\"compilationTarget\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/MockOrganization.sol\":\"MockOrganization\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/organization/contracts/OrganizationInterface.sol\":{\"keccak256\":\"0xac45d29a498c6531778e0a0cdb31c0d0c2fa6f090dfe9ff99e5ee056657e1962\",\"urls\":[\"bzz-raw://c1269e9993d4f7562855faefbc64f15e7bbe7468777a99611ddfcb4c980c22e1\",\"dweb:/ipfs/QmNRV39vV9RCyovb7EyxWakL2CcMXgoTpToxrfDp9wwQbq\"]},\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/MockOrganization.sol\":{\"keccak256\":\"0x642d8c4ac1e4b59d0a0f9d60144330bde5f6090f89db191f7a5e575c3ce89ca3\",\"urls\":[\"bzz-raw://5435efbe6e661f31dafb8185a13d8e483b3c8f7ef2f520b99b09033de388d945\",\"dweb:/ipfs/QmXKN4ZAWge9EGqpzWGvjf9BZqEtFg4dNQbzEcMEQjK78D\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516101673803806101678339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b039384166001600160a01b0319918216179091556001805493909216921691909117905560ee806100796000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063aa156645146037578063b1ce8eab14606e575b600080fd5b605a60048036036020811015604b57600080fd5b50356001600160a01b03166091565b604080519115158252519081900360200190f35b605a60048036036020811015608257600080fd5b50356001600160a01b031660a5565b6001546001600160a01b0390811691161490565b6000546001600160a01b039081169116149056fea265627a7a72315820fafe86fd768f1b79c17cf4c19e5d31f653bc4dbf6d037574fade15be3fa8c0a364736f6c63430005100032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c8063aa156645146037578063b1ce8eab14606e575b600080fd5b605a60048036036020811015604b57600080fd5b50356001600160a01b03166091565b604080519115158252519081900360200190f35b605a60048036036020811015608257600080fd5b50356001600160a01b031660a5565b6001546001600160a01b0390811691161490565b6000546001600160a01b039081169116149056fea265627a7a72315820fafe86fd768f1b79c17cf4c19e5d31f653bc4dbf6d037574fade15be3fa8c0a364736f6c63430005100032",
  "sourceMap": "1070:1459:32:-;;;1539:109;8:9:-1;5:2;;;30:1;27;20:12;5:2;1539:109:32;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1539:109:32;;;;;;;1601:5;:14;;-1:-1:-1;;;;;1601:14:32;;;-1:-1:-1;;;;;;1601:14:32;;;;;;;;1625:16;;;;;;;;;;;;;;1070:1459;;;;;;",
  "deployedSourceMap": "1070:1459:32:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1070:1459:32;;;;;;;;;;;;;;;;;;;;;;;;2407:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2407:120:32;-1:-1:-1;;;;;2407:120:32;;:::i;:::-;;;;;;;;;;;;;;;;;;1984:191;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1984:191:32;-1:-1:-1;;;;;1984:191:32;;:::i;2407:120::-;2503:6;;-1:-1:-1;;;;;2503:6:32;;;:17;;;;2407:120::o;1984:191::-;2092:20;2146:5;-1:-1:-1;;;;;2146:5:32;;;:22;;;;1984:191::o",
  "source": "pragma solidity ^0.5.0;\n\n// Copyright 2019 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ----------------------------------------------------------------------------\n//\n// http://www.simpletoken.org/\n//\n// ----------------------------------------------------------------------------\n\nimport \"../organization/contracts/OrganizationInterface.sol\";\n\n/**\n * @title Mocks an organization interface implementation.\n *\n * @notice The only valid registered owner and worker are given at\n *         construction and cannot be changed or removed.\n */\ncontract MockOrganization is OrganizationInterface {\n\n    /* Storage */\n\n    /** The address of the registered owner. */\n    address owner;\n\n    /** The address of the registered worker. */\n    address worker;\n\n\n    /* Constructor */\n\n    /**\n     * @notice Sets the address of the owner and the worker.\n     *\n     * @param _owner Address that should be used as a registered owner.\n     * @param _worker Address that should be used as a registered worker.\n     */\n    constructor(address _owner, address _worker) public {\n        owner = _owner;\n        worker = _worker;\n    }\n\n\n    /* External functions */\n\n    /**\n     * @notice Checks if an address is currently registered as the organization.\n     *\n     * @param _organization Address to check.\n     *\n     * @return isOrganization_ True if the given address represents the\n     *                         organization. Returns false otherwise.\n     */\n    function isOrganization(\n        address _organization\n    )\n        external\n        view\n        returns (bool isOrganization_)\n    {\n        isOrganization_ = owner == _organization;\n    }\n\n    /**\n     * @notice Checks if an address is currently registered as an active worker.\n     *\n     * @param _worker Address to check.\n     *\n     * @return isWorker_ True if the given address is a registered worker.\n     */\n    function isWorker(address _worker) external view returns (bool isWorker_) {\n        isWorker_ = worker == _worker;\n    }\n}\n",
  "sourcePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/MockOrganization.sol",
  "ast": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/MockOrganization.sol",
    "exportedSymbols": {
      "MockOrganization": [
        3997
      ]
    },
    "id": 3998,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3945,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/organization/contracts/OrganizationInterface.sol",
        "file": "../organization/contracts/OrganizationInterface.sol",
        "id": 3946,
        "nodeType": "ImportDirective",
        "scope": 3998,
        "sourceUnit": 3619,
        "src": "813:61:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3947,
              "name": "OrganizationInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3618,
              "src": "1099:21:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OrganizationInterface_$3618",
                "typeString": "contract OrganizationInterface"
              }
            },
            "id": 3948,
            "nodeType": "InheritanceSpecifier",
            "src": "1099:21:32"
          }
        ],
        "contractDependencies": [
          3618
        ],
        "contractKind": "contract",
        "documentation": "@title Mocks an organization interface implementation.\n * @notice The only valid registered owner and worker are given at\n        construction and cannot be changed or removed.",
        "fullyImplemented": true,
        "id": 3997,
        "linearizedBaseContracts": [
          3997,
          3618
        ],
        "name": "MockOrganization",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3950,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 3997,
            "src": "1195:13:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3949,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1195:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3952,
            "name": "worker",
            "nodeType": "VariableDeclaration",
            "scope": 3997,
            "src": "1264:14:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3951,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1264:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3967,
              "nodeType": "Block",
              "src": "1591:57:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3959,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3950,
                      "src": "1601:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3960,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3954,
                      "src": "1609:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1601:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3962,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:14:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3963,
                      "name": "worker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3952,
                      "src": "1625:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3964,
                      "name": "_worker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3956,
                      "src": "1634:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1625:16:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3966,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:16:32"
                }
              ]
            },
            "documentation": "@notice Sets the address of the owner and the worker.\n     * @param _owner Address that should be used as a registered owner.\n@param _worker Address that should be used as a registered worker.",
            "id": 3968,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3954,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3968,
                  "src": "1551:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3956,
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "scope": 3968,
                  "src": "1567:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1550:33:32"
            },
            "returnParameters": {
              "id": 3958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1591:0:32"
            },
            "scope": 3997,
            "src": "1539:109:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3981,
              "nodeType": "Block",
              "src": "2118:57:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3975,
                      "name": "isOrganization_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3973,
                      "src": "2128:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3976,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "2146:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3977,
                        "name": "_organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3970,
                        "src": "2155:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2146:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2128:40:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3980,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:40:32"
                }
              ]
            },
            "documentation": "@notice Checks if an address is currently registered as the organization.\n     * @param _organization Address to check.\n     * @return isOrganization_ True if the given address represents the\n                        organization. Returns false otherwise.",
            "id": 3982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOrganization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3970,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 3982,
                  "src": "2017:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2007:37:32"
            },
            "returnParameters": {
              "id": 3974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3973,
                  "name": "isOrganization_",
                  "nodeType": "VariableDeclaration",
                  "scope": 3982,
                  "src": "2092:20:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3972,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:22:32"
            },
            "scope": 3997,
            "src": "1984:191:32",
            "stateMutability": "view",
            "superFunction": 3610,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3995,
              "nodeType": "Block",
              "src": "2481:46:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3989,
                      "name": "isWorker_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3987,
                      "src": "2491:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3990,
                        "name": "worker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "2503:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3991,
                        "name": "_worker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3984,
                        "src": "2513:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2503:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2491:29:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3994,
                  "nodeType": "ExpressionStatement",
                  "src": "2491:29:32"
                }
              ]
            },
            "documentation": "@notice Checks if an address is currently registered as an active worker.\n     * @param _worker Address to check.\n     * @return isWorker_ True if the given address is a registered worker.",
            "id": 3996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWorker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3984,
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "scope": 3996,
                  "src": "2425:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2424:17:32"
            },
            "returnParameters": {
              "id": 3988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3987,
                  "name": "isWorker_",
                  "nodeType": "VariableDeclaration",
                  "scope": 3996,
                  "src": "2465:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3986,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2464:16:32"
            },
            "scope": 3997,
            "src": "2407:120:32",
            "stateMutability": "view",
            "superFunction": 3617,
            "visibility": "external"
          }
        ],
        "scope": 3998,
        "src": "1070:1459:32"
      }
    ],
    "src": "0:2530:32"
  },
  "legacyAST": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/test/MockOrganization.sol",
    "exportedSymbols": {
      "MockOrganization": [
        3997
      ]
    },
    "id": 3998,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3945,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/brandedtoken-contracts/contracts/utilitytoken/contracts/organization/contracts/OrganizationInterface.sol",
        "file": "../organization/contracts/OrganizationInterface.sol",
        "id": 3946,
        "nodeType": "ImportDirective",
        "scope": 3998,
        "sourceUnit": 3619,
        "src": "813:61:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3947,
              "name": "OrganizationInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3618,
              "src": "1099:21:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OrganizationInterface_$3618",
                "typeString": "contract OrganizationInterface"
              }
            },
            "id": 3948,
            "nodeType": "InheritanceSpecifier",
            "src": "1099:21:32"
          }
        ],
        "contractDependencies": [
          3618
        ],
        "contractKind": "contract",
        "documentation": "@title Mocks an organization interface implementation.\n * @notice The only valid registered owner and worker are given at\n        construction and cannot be changed or removed.",
        "fullyImplemented": true,
        "id": 3997,
        "linearizedBaseContracts": [
          3997,
          3618
        ],
        "name": "MockOrganization",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3950,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 3997,
            "src": "1195:13:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3949,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1195:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3952,
            "name": "worker",
            "nodeType": "VariableDeclaration",
            "scope": 3997,
            "src": "1264:14:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3951,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1264:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3967,
              "nodeType": "Block",
              "src": "1591:57:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3959,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3950,
                      "src": "1601:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3960,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3954,
                      "src": "1609:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1601:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3962,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:14:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3963,
                      "name": "worker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3952,
                      "src": "1625:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3964,
                      "name": "_worker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3956,
                      "src": "1634:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1625:16:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3966,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:16:32"
                }
              ]
            },
            "documentation": "@notice Sets the address of the owner and the worker.\n     * @param _owner Address that should be used as a registered owner.\n@param _worker Address that should be used as a registered worker.",
            "id": 3968,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3954,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3968,
                  "src": "1551:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3956,
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "scope": 3968,
                  "src": "1567:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1550:33:32"
            },
            "returnParameters": {
              "id": 3958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1591:0:32"
            },
            "scope": 3997,
            "src": "1539:109:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3981,
              "nodeType": "Block",
              "src": "2118:57:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3975,
                      "name": "isOrganization_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3973,
                      "src": "2128:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3976,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "2146:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3977,
                        "name": "_organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3970,
                        "src": "2155:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2146:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2128:40:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3980,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:40:32"
                }
              ]
            },
            "documentation": "@notice Checks if an address is currently registered as the organization.\n     * @param _organization Address to check.\n     * @return isOrganization_ True if the given address represents the\n                        organization. Returns false otherwise.",
            "id": 3982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOrganization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3970,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 3982,
                  "src": "2017:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2007:37:32"
            },
            "returnParameters": {
              "id": 3974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3973,
                  "name": "isOrganization_",
                  "nodeType": "VariableDeclaration",
                  "scope": 3982,
                  "src": "2092:20:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3972,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:22:32"
            },
            "scope": 3997,
            "src": "1984:191:32",
            "stateMutability": "view",
            "superFunction": 3610,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3995,
              "nodeType": "Block",
              "src": "2481:46:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3989,
                      "name": "isWorker_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3987,
                      "src": "2491:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3990,
                        "name": "worker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "2503:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3991,
                        "name": "_worker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3984,
                        "src": "2513:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2503:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2491:29:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3994,
                  "nodeType": "ExpressionStatement",
                  "src": "2491:29:32"
                }
              ]
            },
            "documentation": "@notice Checks if an address is currently registered as an active worker.\n     * @param _worker Address to check.\n     * @return isWorker_ True if the given address is a registered worker.",
            "id": 3996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWorker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3984,
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "scope": 3996,
                  "src": "2425:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2424:17:32"
            },
            "returnParameters": {
              "id": 3988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3987,
                  "name": "isWorker_",
                  "nodeType": "VariableDeclaration",
                  "scope": 3996,
                  "src": "2465:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3986,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2464:16:32"
            },
            "scope": 3997,
            "src": "2407:120:32",
            "stateMutability": "view",
            "superFunction": 3617,
            "visibility": "external"
          }
        ],
        "scope": 3998,
        "src": "1070:1459:32"
      }
    ],
    "src": "0:2530:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.21",
  "updatedAt": "2020-01-19T12:15:30.156Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "params": {
          "_owner": "Address that should be used as a registered owner.",
          "_worker": "Address that should be used as a registered worker."
        }
      },
      "isOrganization(address)": {
        "params": {
          "_organization": "Address to check."
        },
        "return": "isOrganization_ True if the given address represents the                        organization. Returns false otherwise."
      },
      "isWorker(address)": {
        "params": {
          "_worker": "Address to check."
        },
        "return": "isWorker_ True if the given address is a registered worker."
      }
    },
    "title": "Mocks an organization interface implementation."
  },
  "userdoc": {
    "methods": {
      "constructor": "Sets the address of the owner and the worker.",
      "isOrganization(address)": {
        "notice": "Checks if an address is currently registered as the organization."
      },
      "isWorker(address)": {
        "notice": "Checks if an address is currently registered as an active worker."
      }
    },
    "notice": "The only valid registered owner and worker are given at        construction and cannot be changed or removed."
  }
}