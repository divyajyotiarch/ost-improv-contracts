{
  "contractName": "OrganizationInterface",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_organization",
          "type": "address"
        }
      ],
      "name": "isOrganization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOrganization_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_worker",
          "type": "address"
        }
      ],
      "name": "isWorker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWorker_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_organization\",\"type\":\"address\"}],\"name\":\"isOrganization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOrganization_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_worker\",\"type\":\"address\"}],\"name\":\"isWorker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWorker_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOrganization(address)\":{\"params\":{\"_organization\":\"Address to check.\"},\"return\":\"isOrganization_ True if the given address represents the                        organization. Returns false otherwise.\"},\"isWorker(address)\":{\"params\":{\"_worker\":\"Address to check.\"},\"return\":\"isWorker_ True if the given address is a registered, active                  worker. Returns false otherwise.\"}},\"title\":\"OrganizationInterface provides methods to check if an address is        currently registered as an active participant in the organization.\"},\"userdoc\":{\"methods\":{\"isOrganization(address)\":{\"notice\":\"Checks if an address is currently registered as the organization.\"},\"isWorker(address)\":{\"notice\":\"Checks if an address is currently registered as an active worker.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/OrganizationInterface.sol\":\"OrganizationInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/OrganizationInterface.sol\":{\"keccak256\":\"0xac45d29a498c6531778e0a0cdb31c0d0c2fa6f090dfe9ff99e5ee056657e1962\",\"urls\":[\"bzz-raw://c1269e9993d4f7562855faefbc64f15e7bbe7468777a99611ddfcb4c980c22e1\",\"dweb:/ipfs/QmNRV39vV9RCyovb7EyxWakL2CcMXgoTpToxrfDp9wwQbq\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n// Copyright 2019 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ----------------------------------------------------------------------------\n//\n// http://www.simpletoken.org/\n//\n// ----------------------------------------------------------------------------\n\n/**\n *  @title OrganizationInterface provides methods to check if an address is\n *         currently registered as an active participant in the organization.\n */\ninterface OrganizationInterface {\n\n    /**\n     * @notice Checks if an address is currently registered as the organization.\n     *\n     * @param _organization Address to check.\n     *\n     * @return isOrganization_ True if the given address represents the\n     *                         organization. Returns false otherwise.\n     */\n    function isOrganization(\n        address _organization\n    )\n        external\n        view\n        returns (bool isOrganization_);\n\n    /**\n     * @notice Checks if an address is currently registered as an active worker.\n     *\n     * @param _worker Address to check.\n     *\n     * @return isWorker_ True if the given address is a registered, active\n     *                   worker. Returns false otherwise.\n     */\n    function isWorker(address _worker) external view returns (bool isWorker_);\n\n}\n",
  "sourcePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/OrganizationInterface.sol",
  "ast": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/OrganizationInterface.sol",
    "exportedSymbols": {
      "OrganizationInterface": [
        5146
      ]
    },
    "id": 5147,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5131,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:40"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": " @title OrganizationInterface provides methods to check if an address is\n        currently registered as an active participant in the organization.",
        "fullyImplemented": false,
        "id": 5146,
        "linearizedBaseContracts": [
          5146
        ],
        "name": "OrganizationInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Checks if an address is currently registered as the organization.\n     * @param _organization Address to check.\n     * @return isOrganization_ True if the given address represents the\n                        organization. Returns false otherwise.",
            "id": 5138,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOrganization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5133,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "1346:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1336:37:40"
            },
            "returnParameters": {
              "id": 5137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5136,
                  "name": "isOrganization_",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "1421:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1420:22:40"
            },
            "scope": 5146,
            "src": "1313:130:40",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Checks if an address is currently registered as an active worker.\n     * @param _worker Address to check.\n     * @return isWorker_ True if the given address is a registered, active\n                  worker. Returns false otherwise.",
            "id": 5145,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isWorker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5140,
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "1751:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1750:17:40"
            },
            "returnParameters": {
              "id": 5144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5143,
                  "name": "isWorker_",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "1791:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1790:16:40"
            },
            "scope": 5146,
            "src": "1733:74:40",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5147,
        "src": "975:835:40"
      }
    ],
    "src": "0:1811:40"
  },
  "legacyAST": {
    "absolutePath": "/Users/OST/Documents/dj/ost-opt-contracts/contracts/openst-contracts/contracts/organization/contracts/OrganizationInterface.sol",
    "exportedSymbols": {
      "OrganizationInterface": [
        5146
      ]
    },
    "id": 5147,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5131,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:40"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": " @title OrganizationInterface provides methods to check if an address is\n        currently registered as an active participant in the organization.",
        "fullyImplemented": false,
        "id": 5146,
        "linearizedBaseContracts": [
          5146
        ],
        "name": "OrganizationInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Checks if an address is currently registered as the organization.\n     * @param _organization Address to check.\n     * @return isOrganization_ True if the given address represents the\n                        organization. Returns false otherwise.",
            "id": 5138,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOrganization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5133,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "1346:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1336:37:40"
            },
            "returnParameters": {
              "id": 5137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5136,
                  "name": "isOrganization_",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "1421:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1420:22:40"
            },
            "scope": 5146,
            "src": "1313:130:40",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Checks if an address is currently registered as an active worker.\n     * @param _worker Address to check.\n     * @return isWorker_ True if the given address is a registered, active\n                  worker. Returns false otherwise.",
            "id": 5145,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isWorker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5140,
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "1751:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1750:17:40"
            },
            "returnParameters": {
              "id": 5144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5143,
                  "name": "isWorker_",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "1791:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1790:16:40"
            },
            "scope": 5146,
            "src": "1733:74:40",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5147,
        "src": "975:835:40"
      }
    ],
    "src": "0:1811:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.21",
  "updatedAt": "2020-01-21T06:50:59.716Z",
  "devdoc": {
    "methods": {
      "isOrganization(address)": {
        "params": {
          "_organization": "Address to check."
        },
        "return": "isOrganization_ True if the given address represents the                        organization. Returns false otherwise."
      },
      "isWorker(address)": {
        "params": {
          "_worker": "Address to check."
        },
        "return": "isWorker_ True if the given address is a registered, active                  worker. Returns false otherwise."
      }
    },
    "title": "OrganizationInterface provides methods to check if an address is        currently registered as an active participant in the organization."
  },
  "userdoc": {
    "methods": {
      "isOrganization(address)": {
        "notice": "Checks if an address is currently registered as the organization."
      },
      "isWorker(address)": {
        "notice": "Checks if an address is currently registered as an active worker."
      }
    }
  }
}